@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix occp: <http://www.semanticweb.org/albrechtvaatz/ontologies/2022/9/cMod_V0.1#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@base <http://www.semanticweb.org/albrechtvaatz/ontologies/2022/9/cMod_V0.1> .
@prefix sh:     <http://www.w3.org/ns/shacl#> .
@prefix time:   <http://www.w3.org/2006/time#> .
@prefix osh:    <http://www.occpshape.de/shape#> .

<http://www.semanticweb.org/albrechtvaatz/ontologies/2022/9/cMod_V0.1> rdf:type owl:Ontology ;
                                                                        owl:imports <http://www.w3.org/2006/time#> ;
                                                                        rdfs:comment "First workaround to implement time tracking features to models"@en .

#################################################################
#    Object Properties
#################################################################

    ###  http://www.semanticweb.org/albrechtvaatz/ontologies/2022/9/cMod_V0.1#after
    occp:after rdf:type owl:ObjectProperty ;
                rdfs:subPropertyOf time:after ;
                rdf:type owl:TransitiveProperty ;
                rdfs:comment "A transitive variant of time:after, ensuring that if A occurs after B and B occurs after C, then A also occurs after C."@en ;
                rdfs:label "after (transitive)"@en .


    ###  http://www.semanticweb.org/albrechtvaatz/ontologies/2022/9/cMod_V0.1#before
    occp:before rdf:type owl:ObjectProperty ;
                rdfs:subPropertyOf time:before ;
                rdf:type owl:TransitiveProperty ;
                rdfs:comment "A transitive variant of time:before, ensuring that if A occurs before B and B occurs before C, then A also occurs before C."@en ;
                rdfs:label "before (transitive)"@en .


    ###  http://www.semanticweb.org/albrechtvaatz/ontologies/2022/9/cMod_V0.1#beginsAfter
    occp:beginsAfter rdf:type owl:ObjectProperty ;
                     rdfs:subPropertyOf <http://www.w3.org/2006/time#hasBeginning> ;
                     rdfs:domain <http://www.w3.org/2006/time#TemporalEntity> ;
                     rdfs:range <http://www.w3.org/2006/time#TemporalEntity> ;
                     owl:inverseOf occp:beginsBefore ;
                     rdf:type owl:TransitiveProperty ;
                     rdfs:comment "The object property \"beginsAfter\" is used with time:interval or time:instant to describe the chronological order of the beginnings of T1 and T2. If a time:interval T1 \"beginsAfter\" T2, it only describes, that the beginning of T1 happens after the beginning of T2 without defining the order of the ends of T1 and T2, so the ends of T1 and T2 can happen in any order or simulaneously."@en ;
                     rdfs:label "begins after"@en .


    ###  http://www.semanticweb.org/albrechtvaatz/ontologies/2022/9/cMod_V0.1#beginsBefore
    occp:beginsBefore rdf:type owl:ObjectProperty ;
                      rdfs:subPropertyOf <http://www.w3.org/2006/time#hasBeginning> ;
                      rdfs:domain <http://www.w3.org/2006/time#TemporalEntity> ;
                      rdfs:range <http://www.w3.org/2006/time#TemporalEntity> ;
                      owl:inverseOf occp:beginsAfter ;
                      rdf:type owl:TransitiveProperty ;
                      rdfs:comment "The object property \"beginsBefore\" is used with time:interval or time:instant to describe the chronological order of the beginnings of T1 and T2. If a time:interval T1 \"beginsBefore\" T2, it only describes, that the beginning of T1 happens before the beginning of T2 without defining the order of the ends of T1 and T2, so the ends of T1 and T2 can happen in any order or simulaneously."@en ;
                      rdfs:label "begins before"@en .


    ###  http://www.semanticweb.org/albrechtvaatz/ontologies/2022/9/cMod_V0.1#beginsWith
    occp:beginsWith rdf:type owl:ObjectProperty ;
                    rdfs:subPropertyOf <http://www.w3.org/2006/time#hasBeginning> ;
                    rdfs:comment "The object property \"beginsWith\" is used with time:interval or time:instant to describe the chronological order of the beginnings of T1 and T2. If a time:interval T1 \"beginsWith\" T2, it only describes, that the beginning of T1 happens on the same day with the beginning of T2 without defining the order of the ends of T1 and T2, so the ends of T1 and T2 can happen in any order or simulaneously."@en ;
                    rdfs:label "begins with"@en .


    ###  http://www.semanticweb.org/albrechtvaatz/ontologies/2022/9/cMod_V0.1#endsAfter
    occp:endsAfter rdf:type owl:ObjectProperty ;
                   rdfs:subPropertyOf <http://www.w3.org/2006/time#hasEnd> ;
                   rdfs:domain <http://www.w3.org/2006/time#TemporalEntity> ;
                   rdfs:range <http://www.w3.org/2006/time#TemporalEntity> ;
                   owl:inverseOf occp:endsBefore ;
                   rdf:type owl:TransitiveProperty ;
                   rdfs:comment "The object property \"endsAfter\" is used with time:interval or time:instant to describe the chronological order of the endings of T1 and T2. If a time:interval T1 \"endsAfter\" T2, it only describes, that the ends of T1 happens after the end of T2 without defining the order of the beginnings of T1 and T2, so the beginnings of T1 and T2 can happen in any order or simulaneously."@en ;
                   rdfs:label "ends after"@en .


    ###  http://www.semanticweb.org/albrechtvaatz/ontologies/2022/9/cMod_V0.1#endsBefore
    occp:endsBefore rdf:type owl:ObjectProperty ;
                    rdfs:subPropertyOf <http://www.w3.org/2006/time#hasEnd> ;
                    rdfs:domain <http://www.w3.org/2006/time#TemporalEntity> ;
                    rdfs:range <http://www.w3.org/2006/time#TemporalEntity> ;
                    owl:inverseOf occp:endsAfter ;
                    rdf:type owl:TransitiveProperty ;
                    rdfs:comment "The object property \"endsBefore\" is used with time:interval or time:instant to describe the chronological order of the endings of T1 and T2. If a time:interval T1 \"endsBefore\" T2, it only describes, that the end of T1 happens before the end of T2 without defining the order of the beginnings of T1 and T2, so the beginnings of T1 and T2 can happen in any order or simulaneously."@en ;
                    rdfs:label "ends before"@en .


    ###  http://www.semanticweb.org/albrechtvaatz/ontologies/2022/9/cMod_V0.1#endsCycle
    occp:endsCycle rdf:type owl:ObjectProperty ;
                rdfs:subPropertyOf <http://www.w3.org/2006/time#hasEnd> ;
                rdfs:domain <http://www.w3.org/2006/time#Instant> ;
                rdfs:range occp:Cycle ;
                rdfs:comment "The object property \"endsCycle\" is used to mark instants that end an ongoing cycle within a phase."@en ;
                rdfs:label "ends cycle"@en .


    ###  http://www.semanticweb.org/albrechtvaatz/ontologies/2022/9/cMod_V0.1#endsPhase
    occp:endsPhase rdf:type owl:ObjectProperty ;
                rdfs:subPropertyOf <http://www.w3.org/2006/time#hasEnd> ;
                rdfs:domain <http://www.w3.org/2006/time#Instant> ;
                rdfs:comment "The object property \"endsPhase\" is used to mark instants that end an ongoing phase."@en ;
                rdfs:label "ends phase"@en .


    ###  http://www.semanticweb.org/albrechtvaatz/ontologies/2022/9/cMod_V0.1#endsWith
    occp:endsWith rdf:type owl:ObjectProperty ;
                rdfs:subPropertyOf <http://www.w3.org/2006/time#hasEnd> ;
                rdfs:comment "The object property \"endsWith\" is used with time:interval or time:instant to describe the chronological order of the endings of T1 and T2. If a time:interval T1 \"endsWith\" T2, it only describes, that the ends of T1 happens on the same day as (the end of) T2 without defining the order of the beginnings or points in time of T1 and T2, so the beginnings of T1 and T2 can happen in any order or simulaneously."@en ;
                rdfs:label "ends with"@en .


    ###  http://www.semanticweb.org/albrechtvaatz/ontologies/2022/9/cMod_V0.1#hasActualBeginning
    occp:hasActualBeginning rdf:type owl:ObjectProperty ;
                            rdfs:subPropertyOf <http://www.w3.org/2006/time#hasBeginning> ;
                            rdfs:domain <http://www.w3.org/2006/time#Interval> ;
                            rdfs:comment "The object property \"hasActualBeginning\" is used to mark the actual beginning of a Phase."@en ;
                            rdfs:label "has actual beginning"@en .


    ###  http://www.semanticweb.org/albrechtvaatz/ontologies/2022/9/cMod_V0.1#hasActualEnd
    occp:hasActualEnd rdf:type owl:ObjectProperty ;
                    rdfs:subPropertyOf <http://www.w3.org/2006/time#hasEnd> ;
                    rdfs:domain <http://www.w3.org/2006/time#Interval> ;
                    rdfs:comment "The object property \"hasActualEnd\" is used to mark the actual end of a Phase."@en ;
                    rdfs:label "has actual end"@en .


    ###  http://www.semanticweb.org/albrechtvaatz/ontologies/2022/9/cMod_V0.1#hasActualTime
    occp:hasActualTime rdf:type owl:ObjectProperty ;
                    rdfs:subPropertyOf <http://www.w3.org/2006/time#hasTime> ;
                    rdfs:domain <http://www.w3.org/2006/time#Instant> ;
                    rdfs:comment "The object property \"hasActualTime\" is used to mark the actual points in time of an Instant."@en ;
                    rdfs:label "has actual time"@en .


    ###  http://www.semanticweb.org/albrechtvaatz/ontologies/2022/9/cMod_V0.1#hasEstimatedBeginning
    occp:hasEstimatedBeginning rdf:type owl:ObjectProperty ;
                            rdfs:subPropertyOf <http://www.w3.org/2006/time#hasBeginning> ;
                            rdfs:domain <http://www.w3.org/2006/time#Interval> ;
                            rdfs:comment "The object property \"hasEstimatedBeginning\" is used to mark the estimated beginning of a Phase."@en ;
                            rdfs:label "has estimated beginning"@en .


    ###  http://www.semanticweb.org/albrechtvaatz/ontologies/2022/9/cMod_V0.1#hasEstimatedEnd
    occp:hasEstimatedEnd rdf:type owl:ObjectProperty ;
                        rdfs:subPropertyOf <http://www.w3.org/2006/time#hasEnd> ;
                        rdfs:domain <http://www.w3.org/2006/time#Interval> ;
                        rdfs:comment "The object property \"hasEstimatedEnd\" is used to mark the estimated end of a Phase."@en ;
                        rdfs:label "has estimated end"@en .


    ###  http://www.semanticweb.org/albrechtvaatz/ontologies/2022/9/cMod_V0.1#hasEstimatedTime
    occp:hasEstimatedTime rdf:type owl:ObjectProperty ;
                        rdfs:subPropertyOf <http://www.w3.org/2006/time#hasTime> ;
                        rdfs:domain <http://www.w3.org/2006/time#Instant> ;
                        rdfs:comment "The object property \"hasEstimatedTime\" is used to mark the estimated points in time of an Instant."@en ;
                        rdfs:label "has estimated time"@en .


    ###  http://www.semanticweb.org/albrechtvaatz/ontologies/2022/9/cMod_V0.1#hasInstant
    occp:hasInstant rdf:type owl:ObjectProperty ;
                    rdfs:domain <http://www.w3.org/2006/time#Instant> ;
                    rdfs:comment "The property \"hasInstant\" is used to establish connections between models of constructions or components resp. their corresponding individuals (as representation within an ontology, e.g., a bot:Element) to specific instants of the MsOCCP (e.g., occp:BeginningOfPlanning)."@en ;
                    rdfs:label "has instant"@en .


    ###  http://www.semanticweb.org/albrechtvaatz/ontologies/2022/9/cMod_V0.1#hasPhase
    occp:hasPhase rdf:type owl:ObjectProperty ;
                rdfs:domain <http://www.w3.org/2006/time#Instant> ;
                rdfs:comment "The property \"hasPhase\" is used to connect time instants to certain phases."@en ;
                rdfs:label "has phase"@en .


    ###  http://www.semanticweb.org/albrechtvaatz/ontologies/2022/9/cMod_V0.1#isInPhase
    occp:isInPhase rdf:type owl:ObjectProperty ;
                rdfs:comment "The property \"isInPhase\" is used for new life cycles that evolve e.g., from complex repair measures. Example: Part of a building in use is damaged and needs to be replaced. The repair measures need to be planned and so forth and thus start a new life cycle for the replacement element. This new life cycle is taking place within the repair phase of the damaged elements (\"is in Phase of the Repair Phase of said elements\"), as the rest of the building stays intact."@en ;
                rdfs:label "is in phase"@en .


    ###  http://www.semanticweb.org/albrechtvaatz/ontologies/2022/9/cMod_V0.1#startsCycle
    occp:startsCycle rdf:type owl:ObjectProperty ;
                    rdfs:subPropertyOf <http://www.w3.org/2006/time#hasBeginning> ;
                    rdfs:domain <http://www.w3.org/2006/time#Instant> ;
                    rdfs:comment "The object property \"startsCycle\" is used to mark instants that start a new cycle within a phase."@en ;
                    rdfs:label "starts cycle"@en .


    ###  http://www.semanticweb.org/albrechtvaatz/ontologies/2022/9/cMod_V0.1#startsPhase
    occp:startsPhase rdf:type owl:ObjectProperty ;
                    rdfs:subPropertyOf <http://www.w3.org/2006/time#hasBeginning> ;
                    rdfs:domain <http://www.w3.org/2006/time#Instant> ;
                    rdfs:comment "The object property \"startsPhase\" is used to mark instants that start a new phase."@en ;
                    rdfs:label "starts phase"@en . 


#################################################################
#    Classes
#################################################################

    ###  http://www.semanticweb.org/albrechtvaatz/ontologies/2022/9/cMod_V0.1#BeginOfTenderingProcess
    occp:BeginOfTenderingProcess rdf:type owl:Class ;
                                rdfs:subClassOf occp:Transition ;
                                rdfs:comment "This instant marks the point in time of the beginning of the tendering process. It is placed between the planning and the construction phase. The tendering process is not considered a phase of the building life cycle, but a transition from the planning to the construction phase. The tendering process starts after the 'Transition' \"completion of planning\"."@en ;
                                rdfs:label "Begin of Tendering Process"@en .


    ###  http://www.semanticweb.org/albrechtvaatz/ontologies/2022/9/cMod_V0.1#BeginningOfPlanning
    occp:BeginningOfPlanning rdf:type owl:Class ;
                            rdfs:subClassOf occp:PhaseA_Instant ;
                            rdfs:comment "The Beginning of Planning marks the date of the official start of the planning phase."@en ;
                            rdfs:label "Beginning of Planning"@en .


    ###  http://www.semanticweb.org/albrechtvaatz/ontologies/2022/9/cMod_V0.1#CompletionOfConstruction
    occp:CompletionOfConstruction rdf:type owl:Class ;
                                rdfs:subClassOf occp:Transition ;
                                rdfs:comment "This instant serves as a transition between the construction and usage phase and marks the point in time of the last acceptance of a building/construction and the finish of the construction works. This instant marks the end of the construction phase."@en ;
                                rdfs:label "Completion of Construction"@en .


    ###  http://www.semanticweb.org/albrechtvaatz/ontologies/2022/9/cMod_V0.1#CompletionOfDeconstruction
    occp:CompletionOfDeconstruction rdf:type owl:Class ;
                                    rdfs:subClassOf occp:Transition ;
                                    rdfs:comment "This instant marks the point in time of the completion of the final deconstruction task of a building and marks the end of the life cycle of a building/construction. This instant marks the end of the deconstruction phase."@en ;
                                    rdfs:label "Completion of Deconstruction"@en .


    ###  http://www.semanticweb.org/albrechtvaatz/ontologies/2022/9/cMod_V0.1#CompletionOfPlanning
    occp:CompletionOfPlanning rdf:type owl:Class ;
                            rdfs:subClassOf occp:Transition ;
                            rdfs:comment "This instant serves as a transition from the planning phase to the tendering process and marks the point in time of the last planning review acceptance of a building/construction. This instant marks the end of the planning phase."@en ;
                            rdfs:label "Completion of Planning"@en .


    ###  http://www.semanticweb.org/albrechtvaatz/ontologies/2022/9/cMod_V0.1#ConstructionAcceptance
    occp:ConstructionAcceptance rdf:type owl:Class ;
                                rdfs:subClassOf occp:PhaseC_Instant ;
                                rdfs:comment "This instant marks the date of the final acceptance of a construction or component. The acceptance can be granted after the completion if the construction or after the successful elimination of all defects."@en ;
                                rdfs:label "Construction Acceptance"@en .


    ###  http://www.semanticweb.org/albrechtvaatz/ontologies/2022/9/cMod_V0.1#ConstructionCompletion
    occp:ConstructionCompletion rdf:type owl:Class ;
                                rdfs:subClassOf occp:PhaseC_Instant ;
                                rdfs:comment "This instant marks the point in time of the completion of construction of a model component of building/construction."@en ;
                                rdfs:label "Construction Completion"@en .


    ###  http://www.semanticweb.org/albrechtvaatz/ontologies/2022/9/cMod_V0.1#ConstructionStart
    occp:ConstructionStart rdf:type owl:Class ;
                        rdfs:subClassOf occp:PhaseC_Instant ;
                        rdfs:comment "This instant marks the point in time of the beginning of the construction works of a model component or building/construction."@en ;
                        rdfs:label "Construction Start"@en .


    ###  http://www.semanticweb.org/albrechtvaatz/ontologies/2022/9/cMod_V0.1#Cycle
    occp:Cycle rdf:type owl:Class ;
            rdfs:subClassOf <http://www.w3.org/2006/time#Interval> ;
            rdfs:comment "A cycle is a time span with recurring periods, defined by a starting point in time, a period and a duration. They are used to keep track of iterating processes, like multiple reviews during the planning phase, where each rejection of the reviewer causes another planning (and reviewing) cycle."@en ;
            rdfs:label "Cycle"@en .


    ###  http://www.semanticweb.org/albrechtvaatz/ontologies/2022/9/cMod_V0.1#CycleA_PlanningReview
    occp:CycleA_PlanningReview rdf:type owl:Class ;
                            rdfs:subClassOf occp:Cycle ;
                            rdfs:comment "The CycleA_PlanningReview starts with the submission of a plan to review and ends with either the approval or the rejection of the plan. If the plan is rejected, a new cycle begins. Only the approval of a plan ends the CycleA_PlanningReview without starting another."@en ;
                            rdfs:label "Cycle A Planning Review"@en .


    ###  http://www.semanticweb.org/albrechtvaatz/ontologies/2022/9/cMod_V0.1#DamageDetection
    occp:DamageDetection rdf:type owl:Class ;
                        rdfs:subClassOf occp:PhaseK_Instant ;
                        rdfs:comment "This instant marks the point in time of the detection of a damage that affects a  component/construction/building. Multiple events are possible."@en ;
                        rdfs:label "Damage Detection"@en .


    ###  http://www.semanticweb.org/albrechtvaatz/ontologies/2022/9/cMod_V0.1#DamageObservation
    occp:DamageObservation rdf:type owl:Class ;
                        rdfs:subClassOf occp:PhaseK_Instant ;
                        rdfs:comment "This instant marks the point in time of the observation of a known defect or damage or a component/building/construction. It is usually connected to an inspection, but it could also be used in combination with a damage monitoring system. Multiple events are possible."@en ;
                        rdfs:label "Damage Observation"@en .


    ###  http://www.semanticweb.org/albrechtvaatz/ontologies/2022/9/cMod_V0.1#DamageRepair
    occp:DamageRepair rdf:type owl:Class ;
                    rdfs:subClassOf occp:PhaseK_Instant ;
                    rdfs:comment "This instant marks the point in time of the repair of a defect or damage of a component/building/construction. It usually is combined with the end of repair measures."@en ;
                    rdfs:label "Damage Repair"@en .


    ###  http://www.semanticweb.org/albrechtvaatz/ontologies/2022/9/cMod_V0.1#DataProcurement
    occp:DataProcurement rdf:type owl:Class ;
                        rdfs:subClassOf occp:PhaseA_Instant ;
                        rdfs:comment "Marks the date of data procurement measures like geodetic procurement actions or the date a set of data was added to the planning data sets/planning model. Multiple events are possible."@en ;
                        rdfs:label "Data Procurement"@en .


    ###  http://www.semanticweb.org/albrechtvaatz/ontologies/2022/9/cMod_V0.1#DeconstructionCompletion
    occp:DeconstructionCompletion rdf:type owl:Class ;
                                rdfs:subClassOf occp:PhaseM_Instant ;
                                rdfs:comment "This instant marks the point in time of the completion of the deconstruction works of a component/building/construction. This marks the end of the life cycle of that element."@en ;
                                rdfs:label "Deconstruction Completion"@en .


    ###  http://www.semanticweb.org/albrechtvaatz/ontologies/2022/9/cMod_V0.1#DeconstructionStart
    occp:DeconstructionStart rdf:type owl:Class ;
                            rdfs:subClassOf occp:PhaseM_Instant ;
                            rdfs:comment "This instant marks the beginning of the deconstruction works of a component/building/construction."@en ;
                            rdfs:label "Deconstruction Start"@en .


    ###  http://www.semanticweb.org/albrechtvaatz/ontologies/2022/9/cMod_V0.1#DefectElimCompletion
    occp:DefectElimCompletion rdf:type owl:Class ;
                            rdfs:subClassOf occp:PhaseC_Instant ;
                            rdfs:comment "This instant marks the point in time of the completion of the contruction works related to the elimination of defects of a model component or building/construction."@en ;
                            rdfs:label "Defect Elimination Completion"@en .


    ###  http://www.semanticweb.org/albrechtvaatz/ontologies/2022/9/cMod_V0.1#DefectElimStart
    occp:DefectElimStart rdf:type owl:Class ;
                        rdfs:subClassOf occp:PhaseC_Instant ;
                        rdfs:comment "This instant marks the point in time of the beginning of the contruction works related to the elimination of defects of a model component or building/construction."@en ;
                        rdfs:label "Defect Elimination Start"@en .


    ###  http://www.semanticweb.org/albrechtvaatz/ontologies/2022/9/cMod_V0.1#DesignLifeChange
    occp:DesignLifeChange rdf:type owl:Class ;
                        rdfs:subClassOf occp:PhaseF_Instant ;
                        rdfs:comment "This instant marks the point in time of a change of the estimated design life of a model component or building/construction. Different circumstances, such as repair measures or the change in usage, can lead to a change of the design life estimation and multiple dates can mark the change of estimations, thus this instant can be counted. This instant may lay before or after the end of a design life estimation and marks the date of the change of the estimation for the end of the design life, not the beginning of a new start of design life. Multiple events are possible."@en ;
                        rdfs:label "Design Life Change"@en .


    ###  http://www.semanticweb.org/albrechtvaatz/ontologies/2022/9/cMod_V0.1#DesignLifeEnd
    occp:DesignLifeEnd rdf:type owl:Class ;
                    rdfs:subClassOf occp:PhaseF_Instant ;
                    rdfs:comment "This instant marks the point in time of the end of the estimated design life of a model component or building/construction. Different circumstances, such as repair measures, damages or the change in usage, can lead to a change of the design life estimation and multiple dates can mark the end of the estimated end of the design life, thus multiple entries are possible."@en ;
                    rdfs:label "Design Life End"@en .


    ###  http://www.semanticweb.org/albrechtvaatz/ontologies/2022/9/cMod_V0.1#DesignLifeStart
    occp:DesignLifeStart rdf:type owl:Class ;
                        rdfs:subClassOf occp:PhaseF_Instant ;
                        rdfs:comment "This instant marks the point in time of the start of the estimated design life of a model component or building/construction."@en ;
                        rdfs:label "Design Life Start"@en .


    ###  http://www.semanticweb.org/albrechtvaatz/ontologies/2022/9/cMod_V0.1#Edit_ASTR
    occp:Edit_ASTR rdf:type owl:Class ;
                rdfs:subClassOf occp:PhaseA_Instant ;
                rdfs:comment "ASTR = after submission to review. This instant is used to mark the date that major or significant changes are made to a planning model after the draft is submitted to the reviewer. Since many changes of this type are possible, multiple entries are possible."@en ;
                rdfs:label "Edit ASTR"@en .


    ###  http://www.semanticweb.org/albrechtvaatz/ontologies/2022/9/cMod_V0.1#Edit_BSTR
    occp:Edit_BSTR rdf:type owl:Class ;
                rdfs:subClassOf occp:PhaseA_Instant ;
                rdfs:comment "BSTR = Before submission to review. This instant is used to mark the date that major or significant changes are made to a planning model before the draft is submitted to the reviewer. Since many changes of this type are possible, multiple entries are possible."@en ;
                rdfs:label "Edit BSTR"@en .


    ###  http://www.semanticweb.org/albrechtvaatz/ontologies/2022/9/cMod_V0.1#GeologicalEvent
    occp:GeologicalEvent rdf:type owl:Class ;
                        rdfs:subClassOf occp:PhaseH_Instant ;
                        rdfs:comment "This instant marks the point in time of a geological event that affects a component/construction/building, like an earth quake or a subsidence. Multiple events are possible."@en ;
                        rdfs:label "Geological Event"@en .


    ###  http://www.semanticweb.org/albrechtvaatz/ontologies/2022/9/cMod_V0.1#InspectionExecution
    occp:InspectionExecution rdf:type owl:Class ;
                            rdfs:subClassOf occp:PhaseG_Instant ;
                            rdfs:comment "This instant marks the point in time of the execution of a regular inspection. Many inspections are possible over the life cycle of a component/building/structure."@en ;
                            rdfs:label "Inspection Execution"@en .


    ###  http://www.semanticweb.org/albrechtvaatz/ontologies/2022/9/cMod_V0.1#IrregularInspection
    occp:IrregularInspection rdf:type owl:Class ;
                            rdfs:subClassOf occp:PhaseG_Instant ;
                            rdfs:comment "This instant marks the point in time of the execution of an irregular inspection. Many irregular inspections are possible over the life cycle of a component/building/structure."@en ;
                            rdfs:label "Irregular Inspection"@en .


    ###  http://www.semanticweb.org/albrechtvaatz/ontologies/2022/9/cMod_V0.1#LoadEvent
    occp:LoadEvent rdf:type owl:Class ;
                rdfs:subClassOf occp:PhaseH_Instant ;
                rdfs:comment "This instant marks the point in time of a irregular load event that affects a component/construction/building. Multiple events are possible."@en ;
                rdfs:label "Load Event"@en .


    ###  http://www.semanticweb.org/albrechtvaatz/ontologies/2022/9/cMod_V0.1#NewComponent
    occp:NewComponent rdf:type owl:Class ;
                    rdfs:subClassOf occp:PhaseL_Instant ;
                    rdfs:comment "This instant marks the point in time of the addition of a new component to an existing component/buildling/construction. For example this can be used to keep track of different parts of a construction, that need to be replaced, such as a new door handle that is fitted to an old door. For bigger changes within existing components/buildings/constructions, it is possible to initiate a sub-life-cycle (from planning until deconstruction), but as this could lead to confusion, this instant can be used to separate the new component (and its life cycle) from the old component, which continues to exist. Multiple events are possible."@en ;
                    rdfs:label "New Component"@en .


    ###  http://www.semanticweb.org/albrechtvaatz/ontologies/2022/9/cMod_V0.1#NextRegularInspection
    occp:NextRegularInspection rdf:type owl:Class ;
                            rdfs:subClassOf occp:PhaseG_Instant ;
                            rdfs:comment "This instant marks the point in time of the next of a regular inspection. This date is depending on the inspection interval of the component/building/structure and is usually calculated regarding the date of the last regular inspection. It serves as an orientation or reminder for the planning of the next regular inspection in order to stay within the regular inspection interval. Many inspections are possible over the life cycle of a component/building/structure."@en ;
                            rdfs:label "Next Regular Inspection"@en .


    ###  http://www.semanticweb.org/albrechtvaatz/ontologies/2022/9/cMod_V0.1#Phase
    occp:Phase rdf:type owl:Class ;
            rdfs:subClassOf <http://www.w3.org/2006/time#Interval> ;
            rdfs:comment "Phases describe the main blocks of the life cycle of a building within the chronology. The order is based on the general approach of planning, building, using, maintaining and deconstruction an object in civil engineering. It is a suggestion for a base chronological structure that can be edited and expanded as needed to fit the use case."@en ;
            rdfs:label "Phase"@en .


    ###  http://www.semanticweb.org/albrechtvaatz/ontologies/2022/9/cMod_V0.1#PhaseA_Instant
    occp:PhaseA_Instant rdf:type owl:Class ;
                        rdfs:subClassOf <http://www.w3.org/2006/time#Instant> ;
                        rdfs:comment "Contains all instants that are within Phase A - Planning Phase"@en ;
                        rdfs:label "Phase A Instant"@en .


    ###  http://www.semanticweb.org/albrechtvaatz/ontologies/2022/9/cMod_V0.1#PhaseA_Planning
    occp:PhaseA_Planning rdf:type owl:Class ;
                        rdfs:subClassOf occp:Phase ;
                        rdfs:comment "This phase describes the planning phase. It begins with the beginning of planning and ends with the transition \"CompletionOfPlanning\"."@en ;
                        rdfs:label "Phase A Planning"@en .


    ###  http://www.semanticweb.org/albrechtvaatz/ontologies/2022/9/cMod_V0.1#PhaseB_Instant
    occp:PhaseB_Instant rdf:type owl:Class ;
                        rdfs:subClassOf <http://www.w3.org/2006/time#Instant> ;
                        rdfs:comment "Contains all instants that are within Phase B - Review Phase"@en ;
                        rdfs:label "Phase B Instant"@en .


    ###  http://www.semanticweb.org/albrechtvaatz/ontologies/2022/9/cMod_V0.1#PhaseB_Review
    occp:PhaseB_Review rdf:type owl:Class ;
                    rdfs:subClassOf occp:Phase ;
                    rdfs:comment "This phase describes the review phase. It begins with the first submission to review and ends with the transition \"CompletionOfPlanning\"."@en ;
                    rdfs:label "Phase B Review"@en .


    ###  http://www.semanticweb.org/albrechtvaatz/ontologies/2022/9/cMod_V0.1#PhaseC_Construction
    occp:PhaseC_Construction rdf:type owl:Class ;
                            rdfs:subClassOf occp:Phase ;
                            rdfs:comment "This phase describes the construction phase. It begins with the beginning of construction and ends with the transition \"CompletionOfConstruction\"."@en ;
                            rdfs:label "Phase C Construction"@en .


    ###  http://www.semanticweb.org/albrechtvaatz/ontologies/2022/9/cMod_V0.1#PhaseC_Instant
    occp:PhaseC_Instant rdf:type owl:Class ;
                        rdfs:subClassOf <http://www.w3.org/2006/time#Instant> ;
                        rdfs:comment "Contains all instants that are within Phase C - Construction Phase"@en ;
                        rdfs:label "Phase C Instant"@en .


    ###  http://www.semanticweb.org/albrechtvaatz/ontologies/2022/9/cMod_V0.1#PhaseD_Instant
    occp:PhaseD_Instant rdf:type owl:Class ;
                        rdfs:subClassOf <http://www.w3.org/2006/time#Instant> ;
                        rdfs:comment "Contains all instants that are within Phase D - Usage Phase"@en ;
                        rdfs:label "Phase D Instant"@en .


    ###  http://www.semanticweb.org/albrechtvaatz/ontologies/2022/9/cMod_V0.1#PhaseD_Usage
    occp:PhaseD_Usage rdf:type owl:Class ;
                    rdfs:subClassOf occp:Phase ;
                    rdfs:comment "This phase describes the usage phase. It begins with the beginning of usage and ends with the end of usage."@en ;
                    rdfs:label "Phase D Usage"@en .


    ###  http://www.semanticweb.org/albrechtvaatz/ontologies/2022/9/cMod_V0.1#PhaseE_Instant
    occp:PhaseE_Instant rdf:type owl:Class ;
                        rdfs:subClassOf <http://www.w3.org/2006/time#Instant> ;
                        rdfs:comment "Contains all instants that are within Phase E - Warranty Phase."@en ;
                        rdfs:label "Phase E Instant"@en .


    ###  http://www.semanticweb.org/albrechtvaatz/ontologies/2022/9/cMod_V0.1#PhaseE_Warranty
    occp:PhaseE_Warranty rdf:type owl:Class ;
                        rdfs:subClassOf occp:Phase ;
                        rdfs:comment "This phase describes the warranty phase. It begins with the beginning of warranty and ends with the last end of warranty."@en ;
                        rdfs:label "Phase E Warranty"@en .


    ###  http://www.semanticweb.org/albrechtvaatz/ontologies/2022/9/cMod_V0.1#PhaseF_DesignLife
    occp:PhaseF_DesignLife rdf:type owl:Class ;
                        rdfs:subClassOf occp:Phase ;
                        rdfs:comment "This phase describes the design life phase. It begins with the beginning of design life and ends with the end of design life."@en ;
                        rdfs:label "Phase F Design Life"@en .


    ###  http://www.semanticweb.org/albrechtvaatz/ontologies/2022/9/cMod_V0.1#PhaseF_Instant
    occp:PhaseF_Instant rdf:type owl:Class ;
                        rdfs:subClassOf <http://www.w3.org/2006/time#Instant> ;
                        rdfs:comment "Contains all instants that are within Phase F - Design Life Phase."@en ;
                        rdfs:label "Phase F Instant"@en .


    ###  http://www.semanticweb.org/albrechtvaatz/ontologies/2022/9/cMod_V0.1#PhaseG_Inspection
    occp:PhaseG_Inspection rdf:type owl:Class ;
                        rdfs:subClassOf occp:Phase ;
                        rdfs:comment "This phase describes the inspection phase. It begins with the beginning of usage and ends with the beginning of deconstruction."@en ;
                        rdfs:label "Phase G Inspection"@en .


    ###  http://www.semanticweb.org/albrechtvaatz/ontologies/2022/9/cMod_V0.1#PhaseG_Instant
    occp:PhaseG_Instant rdf:type owl:Class ;
                        rdfs:subClassOf <http://www.w3.org/2006/time#Instant> ;
                        rdfs:comment "Contains all instants that are within Phase G - Inspection Phase."@en ;
                        rdfs:label "Phase G Instant"@en .


    ###  http://www.semanticweb.org/albrechtvaatz/ontologies/2022/9/cMod_V0.1#PhaseH_Instant
    occp:PhaseH_Instant rdf:type owl:Class ;
                        rdfs:subClassOf <http://www.w3.org/2006/time#Instant> ;
                        rdfs:comment "Contains all instants that are within Phase H - Special Events Phase"@en ;
                        rdfs:label "Phase H Instant"@en .


    ###  http://www.semanticweb.org/albrechtvaatz/ontologies/2022/9/cMod_V0.1#PhaseH_SpecialEvents
    occp:PhaseH_SpecialEvents rdf:type owl:Class ;
                            rdfs:subClassOf occp:Phase ;
                            rdfs:comment "This phase describes the special events phase. It begins with the first special event and ends with the last."@en ;
                            rdfs:label "Phase H Special Events"@en .


    ###  http://www.semanticweb.org/albrechtvaatz/ontologies/2022/9/cMod_V0.1#PhaseK_Damage
    occp:PhaseK_Damage rdf:type owl:Class ;
                    rdfs:subClassOf occp:Phase ;
                    rdfs:comment "This phase describes the damage phase. It begins with the first damage detection and ends with the completion of repair or the beginning of deconstruction."@en ;
                    rdfs:label "Phase K Damage"@en .


    ###  http://www.semanticweb.org/albrechtvaatz/ontologies/2022/9/cMod_V0.1#PhaseK_Instant
    occp:PhaseK_Instant rdf:type owl:Class ;
                        rdfs:subClassOf <http://www.w3.org/2006/time#Instant> ;
                        rdfs:comment "Contains all instants that are within Phase K - Damage Phase."@en ;
                        rdfs:label "Phase K Instant"@en .


    ###  http://www.semanticweb.org/albrechtvaatz/ontologies/2022/9/cMod_V0.1#PhaseL_Instant
    occp:PhaseL_Instant rdf:type owl:Class ;
                        rdfs:subClassOf <http://www.w3.org/2006/time#Instant> ;
                        rdfs:comment "Contains all instants that are within Phase L - Repair Phase."@en ;
                        rdfs:label "Phase L Instant"@en .


    ###  http://www.semanticweb.org/albrechtvaatz/ontologies/2022/9/cMod_V0.1#PhaseL_Repair
    occp:PhaseL_Repair rdf:type owl:Class ;
                    rdfs:subClassOf occp:Phase ;
                    rdfs:comment "This phase describes the repair phase. It begins with the beginning of repair works and ends with the completion of repair works."@en ;
                    rdfs:label "Phase L Repair"@en .


    ###  http://www.semanticweb.org/albrechtvaatz/ontologies/2022/9/cMod_V0.1#PhaseM_Deconstruction
    occp:PhaseM_Deconstruction rdf:type owl:Class ;
                            rdfs:subClassOf occp:Phase ;
                            rdfs:comment "This Phase describes the deconstruction works from the beginning until the end of deconstruction of a component/building/construction."@en ;
                            rdfs:label "Phase M Deconstruction"@en .


    ###  http://www.semanticweb.org/albrechtvaatz/ontologies/2022/9/cMod_V0.1#PhaseM_Instant
    occp:PhaseM_Instant rdf:type owl:Class ;
                        rdfs:subClassOf <http://www.w3.org/2006/time#Instant> ;
                        rdfs:comment "Contains all instants that are within Phase M - Deconstruction Phase."@en ;
                        rdfs:label "Phase M Instant"@en .


    ###  http://www.semanticweb.org/albrechtvaatz/ontologies/2022/9/cMod_V0.1#RepairCompletion
    occp:RepairCompletion rdf:type owl:Class ;
                        rdfs:subClassOf occp:PhaseL_Instant ;
                        rdfs:comment "This instant marks the point in time of the completion of damage repair works of a component/construction/building. Multiple events are possible."@en ;
                        rdfs:label "Repair Completion"@en .


    ###  http://www.semanticweb.org/albrechtvaatz/ontologies/2022/9/cMod_V0.1#RepairStart
    occp:RepairStart rdf:type owl:Class ;
                    rdfs:subClassOf occp:PhaseL_Instant ;
                    rdfs:comment "This instant marks the point in time of the beginning of damage repair works of a component/construction/building. Multiple events are possible."@en ;
                    rdfs:label "Repair Start"@en .


    ###  http://www.semanticweb.org/albrechtvaatz/ontologies/2022/9/cMod_V0.1#ReviewApproval
    occp:ReviewApproval rdf:type owl:Class ;
                        rdfs:subClassOf occp:PhaseB_Instant ;
                        rdfs:comment "This instant marks the point in time of the acceptance of a planning model by the reviewer. It also marks the end of the planning and review phases for the reviewed and approved model or model component."@en ;
                        rdfs:label "Review Approval"@en .


    ###  http://www.semanticweb.org/albrechtvaatz/ontologies/2022/9/cMod_V0.1#ReviewRejection
    occp:ReviewRejection rdf:type owl:Class ;
                        rdfs:subClassOf occp:PhaseB_Instant ;
                        rdfs:comment "This instant marks the point in time of the rejection of a planning model by the reviewer. Multiple events are possible."@en ;
                        rdfs:label "Review Rejection"@en .


    ###  http://www.semanticweb.org/albrechtvaatz/ontologies/2022/9/cMod_V0.1#ReviewStart
    occp:ReviewStart rdf:type owl:Class ;
                    rdfs:subClassOf occp:PhaseB_Instant ;
                    rdfs:comment "This instant marks the starting point of the reviewing process. Multiple events are possible (in case of a rejection and restart of the review)."@en ;
                    rdfs:label "Review Start"@en .


    ###  http://www.semanticweb.org/albrechtvaatz/ontologies/2022/9/cMod_V0.1#Submission
    occp:Submission rdf:type owl:Class ;
                    rdfs:subClassOf occp:Transition ;
                    rdfs:comment "The submission instant marks the point in time of the end of the tendering process and serves as a transition to the construction phase."@en ;
                    rdfs:label "Submission"@en .


    ###  http://www.semanticweb.org/albrechtvaatz/ontologies/2022/9/cMod_V0.1#SubmissionToReview
    occp:SubmissionToReview rdf:type owl:Class ;
                            rdfs:subClassOf occp:PhaseA_Instant ;
                            rdfs:comment "This instant marks the date of the submission of a planning draft or model to the reviewer. It starts the reviewing process and thus Phase B. Multiple iterations may be needed to get the reviewers approval."@en ;
                            rdfs:label "Submission to Review"@en .


    ###  http://www.semanticweb.org/albrechtvaatz/ontologies/2022/9/cMod_V0.1#Transition
    occp:Transition rdf:type owl:Class ;
                    rdfs:subClassOf <http://www.w3.org/2006/time#Instant> ;
                    rdfs:comment "Transitions mark key milestones between phases or special triggering events regarding a project - not single components. They usually trigger or allow for the beginning of the next consecutive phase or milestone of the project and/or marking the completion of a phase."@en ;
                    rdfs:label "Transition"@en .


    ###  http://www.semanticweb.org/albrechtvaatz/ontologies/2022/9/cMod_V0.1#UsageChange
    occp:UsageChange rdf:type owl:Class ;
                    rdfs:subClassOf occp:PhaseD_Instant ;
                    rdfs:comment "This instant marks the point in time of a change in usage of model component or building/construction. Since there can be multiple changes in usage, this instant can be counted. This also means there can be multiple usage phases (with gaps in between them) and thus multiple starts and endings of these usage phases. This instant is after the end of a previous usage phase and before the start of a new usage phase."@en ;
                    rdfs:label "Usage Change"@en .


    ###  http://www.semanticweb.org/albrechtvaatz/ontologies/2022/9/cMod_V0.1#UsageEnd
    occp:UsageEnd rdf:type owl:Class ;
                rdfs:subClassOf occp:PhaseD_Instant ;
                rdfs:comment "This instant marks the point in time of the end of usage of model component or building/construction. Multiple events are possible."@en ;
                rdfs:label "Usage End"@en .


    ###  http://www.semanticweb.org/albrechtvaatz/ontologies/2022/9/cMod_V0.1#UsageStart
    occp:UsageStart rdf:type owl:Class ;
                    rdfs:subClassOf occp:PhaseD_Instant ;
                    rdfs:comment "This instant marks the point in time of the beginning of usage of model component or building/construction. Multiple events are possible."@en ;
                    rdfs:label "Usage Start"@en .


    ###  http://www.semanticweb.org/albrechtvaatz/ontologies/2022/9/cMod_V0.1#WarrantyChange
    occp:WarrantyChange rdf:type owl:Class ;
                        rdfs:subClassOf occp:PhaseE_Instant ;
                        rdfs:comment "This instant marks the point in time of a change of the warranty of a model component or building/construction. Repair measures can lead to the restart of the warranty period or the prolonging af the warranty, thus multiple events are possible."@en ;
                        rdfs:label "Warranty Change"@en .


    ###  http://www.semanticweb.org/albrechtvaatz/ontologies/2022/9/cMod_V0.1#WarrantyEnd
    occp:WarrantyEnd rdf:type owl:Class ;
                    rdfs:subClassOf occp:PhaseE_Instant ;
                    rdfs:comment "This instant marks the point in time of the end of the warranty period of a model component or building/construction. Repair measures can lead to the restart of the warranty period and multiple dates that mark the end of the warranty."@en ;
                    rdfs:label "Warranty End"@en .


    ###  http://www.semanticweb.org/albrechtvaatz/ontologies/2022/9/cMod_V0.1#WarrantyStart
    occp:WarrantyStart rdf:type owl:Class ;
                    rdfs:subClassOf occp:PhaseE_Instant ;
                    rdfs:comment "This instant marks the point in time of the beginning of the warranty period of a model component or building/construction. Repair measures can lead to the restart of the warranty period and multiple dates that mark the beginning of the warranty."@en ;
                    rdfs:label "Warranty Start"@en .


    ###  http://www.semanticweb.org/albrechtvaatz/ontologies/2022/9/cMod_V0.1#WeatherEvent
    occp:WeatherEvent rdf:type owl:Class ;
                    rdfs:subClassOf occp:PhaseH_Instant ;
                    rdfs:comment "This instant marks the point in time of a weather event that affects a  component/construction/building, like an flood or hurricane. Since multiple events are possible."@en ;
                    rdfs:label "Weather Event"@en .



#################################################################
#    SHACL SHAPES
#################################################################

### GENERAL SHAPE RULES

  osh:GeneralDatePropertyShape a sh:PropertyShape ;     # All dates are in the xs-date format (YYYY-MM-DD).
    sh:path [ sh:alternativePath ( time:hasTime time:hasBeginning occp:hasActualBeginning occp:hasEstimatedBeginning time:hasEnd occp:hasActualEnd occp:hasEstimatedEnd occp:hasNewTime occp:hasPreviousTime ) ] ;
    sh:datatype xsd:date ;
    sh:message "The date must be in the format YYYY-MM-DD." ;
    sh:severity sh:Violation .

### ORDER OF PHASES AND TRANSITIONS

  osh:ShapeOfPhaseA a sh:NodeShape ;              # Phase A (Planning)
    sh:targetClass occp:PhaseA_Planning ;
    sh:property osh:GeneralDatePropertyShape ;    # Date format YYYY-MM-DD 
    sh:or (                                       # Phase order options
      [
        sh:path occp:before ;                     # Phase A usually starts and ends before Phase C
        sh:class occp:PhaseC_Construction ;
      ]
      [
        sh:path occp:before ;                     # Phase A usually starts and ends before Phase B
        sh:class occp:PhaseB_Review ;
        sh:message "Wrong assignment of Phase A (Planning). Phase A usually starts and ends before Phases B (Review) and C (Construction)." ;
        sh:severity sh:Warning ;
      ] 
    ) ;
    sh:and (                                      # Phase order options
      [
        sh:path occp:beginsBefore ;               # Phase A must start before Phase B   
        sh:class occp:PhaseB_Review ;
      ]
      [
        sh:path occp:beginsBefore ;               # Phase A must start before Phase C  
        sh:class occp:PhaseC_Construction ;
        sh:message "Wrong assignment of Phase A (Planning). Phase A must start before Phases B (Review) and C (Construction)." ;
        sh:severity sh:Violation ;
      ]
    ) ;
    sh:property [                                 # Begin date options
      sh:path time:hasBeginning ;                 # Begin date has to be set (hasBeginning)
      sh:qualifiedValueShape [                    # The following object properties are valid options to set begin date
        sh:path (
          occp:hasEstimatedBeginning
          occp:hasActualBeginning
        ) ;
        sh:minCount 1 ;
        ] ;
      sh:message "Missing date (estimated or actual beginning) in Phase A (Planning) - min. count = 1." ;
      sh:severity sh:Violation ;
      ] ;
    sh:property [                                 # Actual Begin date - limitation
      sh:path occp:hasActualBeginning ;
      sh:maxCount 1 ;
      sh:message "Too many dates for actual Beginning in Phase A (Planning) - max. count = 1" ;
      sh:severity sh:Violation ;
      ] ;
    sh:property [                                 # End date options
      sh:path time:hasEnd ;                       # End date has to be set (hasEnd)
      sh:qualifiedValueShape [                    # The following object properties are valid options to set end date
        sh:path (
          occp:hasEstimatedEnd
          occp:hasActualEnd
        ) ;
        sh:minCount 1 ;
        ] ;
      sh:message "Missing date (estimated or actual end) in Phase A (Planning) - min. count = 1." ;
      sh:severity sh:Violation ;
      ] ;
    sh:property [                                 # Actual End date - limitation
      sh:path occp:hasActualEnd ;
      sh:maxCount 1 ;
      sh:message "Too many dates for actual End in Phase A (Planning) - max. count = 1." ;
      sh:severity sh:Violation ;
      ] .

  osh:ShapeOfPhaseB a sh:NodeShape ;              # Phase B (Review)
    sh:targetClass occp:PhaseB_Review ;
    sh:property osh:GeneralDatePropertyShape ;    # Date format YYYY-MM-DD 
    sh:or (                                       # Phase order options - Phase C (Construction)
      [
        sh:path occp:before ;                     # Phase B usually starts and ends before Phase C
        sh:class occp:PhaseC_Construction ;
      ]
      [
        sh:path occp:beginsBefore ;               # Phase B must start before Phase C (Construction)   
        sh:class occp:PhaseC_Construction ;
        sh:message "Wrong assignment of Phase B (Planning). Phase B usually starts and ends before Phase C (Construction). Phase B must start before Phase C." ;
        sh:severity sh:Violation ;
      ]
      ) ;
    sh:or (                                       # Phase order options - Transition A (Completion of Planning)
      [     
        sh:path occp:before ;                     # Phase B should end before the Completion of Planning
        sh:class occp:CompletionOfPlanning ;
      ]
      [
        sh:path occp:endsWith ;                   # Phase B must end with the Completion of Planning
        sh:class occp:CompletionOfPlanning ;
        sh:message "Wrong assignment Phase B (Review). Phase B must end before or with Transition A (Completion of Planning)." ;
        sh:severity sh:Violation ;
      ]
      ) ;
    sh:property [                                 # Begin date options
      sh:path time:hasBeginning ;                 # Begin date has to be set (hasBeginning)
      sh:qualifiedValueShape [                    # The following object properties are valid options to set begin date
        sh:path (
          occp:hasEstimatedBeginning
          occp:hasActualBeginning
        ) ;
        sh:minCount 1 ;
        ] ;
      sh:message "Missing date (estimated or actual beginning) in Phase B (Review) - min. count = 1." ;
      sh:severity sh:Violation ;
      ] ;
    sh:property [                                 # Actual Begin date - limitation
      sh:path occp:hasActualBeginning ;
      sh:maxCount 1 ;
      sh:message "Too many dates for actual Beginning in Phase B (Review) - max. count = 1" ;
      sh:severity sh:Violation ;
      ] ;
      sh:property [                               # End date options
        sh:path time:hasEnd ;                     # End date has to be set (hasEnd)
        sh:qualifiedValueShape [                  # The following object properties are valid options to set end date
        sh:path (
          occp:hasEstimatedEnd
          occp:hasActualEnd
        ) ;
        sh:minCount 1 ;
        ] ;
      sh:message "Missing date (estimated or actual end) in Phase B (Review) - min. count = 1." ;
      sh:severity sh:Violation ;
      ] ;
    sh:property [                                 # Actual End date - limitation
      sh:path occp:hasActualEnd ; 
      sh:maxCount 1 ;
      sh:message "Too many dates for actual End in Phase B (Review) - max. count = 1." ;
      sh:severity sh:Violation ;
      ] .

  osh:ShapeOfTransitionA a sh:NodeShape ;         # Transition A (Completion of Planning)
    sh:property osh:GeneralDatePropertyShape ;    # Date format YYYY-MM-DD     
    sh:targetClass occp:CompletionOfPlanning ;
    sh:property [                                 # Transition order
      sh:path occp:before ;
      sh:class occp:BeginOfTenderingProcess ;
      sh:message "Wrong assignment of Transition A (Completion of Planning) or Transition B (Begin of Tendering Process). Transition A usually occurs before Transition B." ;
      sh:severity sh:Warning ;
      ] ;
    sh:property [                                 # Transition time (single point in time)
      sh:path time:hasTime ;
      sh:minCount 1 ;
      sh:maxCount 1 ;
      sh:message "Missing or too many dates for Transition A (Completion of Planning) - max. & min. count = 1." ;
      sh:severity sh:Violation ;
      ] .

  osh:ShapeOfTransitionB a sh:NodeShape ;         # Transition B (Begin Of Tendering Process)
    sh:targetClass occp:BeginOfTenderingProcess ;
    sh:property osh:GeneralDatePropertyShape ;    # Date format YYYY-MM-DD       
    sh:property [                                 # Transition order
      sh:path occp:before ;                
      sh:class occp:Submission ;
      sh:message "Wrong assignment of Transition B (Begin of Tendering Process) or Transition C (Submission). Transition B usually occurs before Transition C." ;
      sh:severity sh:Warning ;
      ] ;
    sh:property [                                 # Transition time (single point in time)
      sh:path time:hasTime ;
      sh:minCount 1 ;
      sh:maxCount 1 ;
      sh:message "Missing or too many dates for Transition B (Begin of Tendering Process) - max. & min. count = 1." ;
      sh:severity sh:Violation ;
      ] .

  osh:ShapeOfTransitionC a sh:NodeShape ;         # Transition C (Submission)
    sh:targetClass occp:Submission ;
    sh:property [                                 # Transition order
      sh:path occp:before ;                
      sh:class occp:PhaseC_Construction ;
      sh:message "Wrong assignment of Transition C (Submission) or Phase C (Construction). Transition C usually occurs before Phase C." ;
      sh:severity sh:Warning ;
      ] ;
    sh:property [                                 # Transition time (single point in time)
      sh:path time:hasTime ;
      sh:maxCount 1 ;
      sh:minCount 1 ;      
      sh:message "Missing or too many dates for Transition C (Submission) - max. & min. count = 1." ;
      sh:severity sh:Violation ;
      ] .

  osh:ShapeOfPhaseC a sh:NodeShape ;              # Phase C (Construction)
    sh:targetClass occp:PhaseC_Construction ;
    sh:property [                                 # Phase order
        sh:path occp:after ;
        sh:class occp:CompletionOfPlanning ;
        sh:message "Wrong assignment of Phase C (Construction) or Transition A (Completion of Planning). Phase C usually starts and ends after Transition A." ;
        sh:severity sh:Warning ;
      ] ;
    sh:property [                                 # Phase order
        sh:path occp:after ;
        sh:class occp:Submission ;
        sh:message "Wrong assignment of Phase C (Construction) or Transition C (Submission). Phase C usually starts and ends after Transition C" ;
        sh:severity sh:Warning ;
      ] ;
    sh:or (                                       # Phase order options
      [                      
        sh:path occp:before ;                
        sh:class occp:CompletionOfConstruction ;
      ]
      [
        sh:path occp:endsWith ;
        sh:class occp:CompletionOfConstruction ;
        sh:message "Wrong assignment of Phase C (Construction) or Transition D (Completion of Construction). Phase C must end before or with Transition D." ;
        sh:severity sh:Violation ;
      ]
    ) ;
    sh:property [                                 # Begin date options
      sh:path time:hasBeginning ;                 # Begin date has to be set (hasBeginning)
      sh:qualifiedValueShape [                    # The following object properties are valid options to set begin date
        sh:path (
          occp:hasEstimatedBeginning
          occp:hasActualBeginning
        ) ;
        sh:minCount 1 ;
        ] ;
      sh:message "Missing date (estimated or actual beginning) in Phase C (Construction) - min. count = 1." ;
      sh:severity sh:Violation ;
      ] ;
    sh:property [                                 # Actual Begin date - limitation
      sh:path occp:hasActualBeginning ;
      sh:maxCount 1 ;
      sh:message "Too many dates for actual Beginning in Phase C (Construction) - max. count = 1" ;
      sh:severity sh:Violation ;
      ] ;
      sh:property [                               # End date options
        sh:path time:hasEnd ;                     # End date has to be set (hasEnd)
        sh:qualifiedValueShape [                  # The following object properties are valid options to set end date
        sh:path (
          occp:hasEstimatedEnd
          occp:hasActualEnd
        ) ;
        sh:minCount 1 ;
        ] ;
      sh:message "Missing date (estimated or actual end) in Phase C (Construction) - min. count = 1." ;
      sh:severity sh:Violation ;
      ] ;
    sh:property [                                 # Actual End date - limitation
      sh:path occp:hasActualEnd ; 
      sh:maxCount 1 ;
      sh:message "Too many dates for actual End in Phase C (Construction) - max. count = 1." ;
      sh:severity sh:Violation ;
      ] .

  osh:ShapeOfTransitionD a sh:NodeShape ;         # Transition D (Completion Of Construction)
    sh:targetClass occp:CompletionOfConstruction ;
    sh:property osh:GeneralDatePropertyShape ;    # Date format YYYY-MM-DD 
    sh:property [                                 # Transition time (single point in time)
      sh:path time:hasTime ;
      sh:minCount 1 ;
      sh:maxCount 1 ;
      sh:message "Missing or too many dates for Transition D (Completion of Construction) - max. & min. count = 1." ;
      sh:severity sh:Violation ;
      ] .

  osh:ShapeOfPhaseD a sh:NodeShape ;              # Phase D (Usage)
    sh:targetClass occp:PhaseD_Usage ;
    sh:property osh:GeneralDatePropertyShape ;    # Date format YYYY-MM-DD 
    sh:property [                                 # Phase order
        sh:path occp:after ;
        sh:class occp:CompletionOfConstruction ;
        sh:message "Wrong assignment Phase D (Usage) or Transition D (Completion of Construction). Phase D usually starts and ends after Transition D." ;
        sh:severity sh:Warning ;
      ] ;
    sh:property [                                 # Phase order
        sh:path occp:before ;
        sh:class occp:PhaseM_Deconstruction ;
        sh:message "Wrong assignment Phase D (Usage) or Phase M (Deconstruction). Phase D usually starts and ends before Phase M. We don't want anyone to get hurt, do we?" ;
        sh:severity sh:Warning ;
      ] ;
    sh:property [                                 # Begin date options
      sh:path time:hasBeginning ;                 # Begin date has to be set (hasBeginning)
      sh:qualifiedValueShape [                    # The following object properties are valid options to set begin date
        sh:path (
          occp:hasEstimatedBeginning
          occp:hasActualBeginning
        ) ;
        sh:minCount 1 ;
        ] ;
      sh:message "Missing date (estimated or actual beginning) in Phase D (Usage) - min. count = 1." ;
      sh:severity sh:Violation ;
      ] ;
    sh:property [                                 # Actual Begin date - limitation
      sh:path occp:hasActualBeginning ;
      sh:maxCount 1 ;
      sh:message "Too many dates for actual Beginning in Phase D (Usage) - max. count = 1" ;
      sh:severity sh:Violation ;
      ] ;
      sh:property [                               # End date options
        sh:path time:hasEnd ;                     # End date has to be set (hasEnd)
        sh:qualifiedValueShape [                  # The following object properties are valid options to set end date
        sh:path (
          occp:hasEstimatedEnd
          occp:hasActualEnd
        ) ;
        sh:minCount 1 ;
        ] ;
      sh:message "Missing date (estimated or actual end) in Phase D (Usage) - min. count = 1." ;
      sh:severity sh:Violation ;
      ] ;
    sh:property [                                 # Actual End date - limitation
      sh:path occp:hasActualEnd ; 
      sh:maxCount 1 ;
      sh:message "Too many dates for actual End in Phase D (Usage) - max. count = 1." ;
      sh:severity sh:Violation ;
      ] .

  osh:ShapeOfPhaseE a sh:NodeShape ;              # Phase E (Warranty)
    sh:targetClass occp:PhaseE_Warranty ;
    sh:property osh:GeneralDatePropertyShape ;    # Date format YYYY-MM-DD 
    sh:property [                                 # Phase order
        sh:path occp:after ;
        sh:class occp:CompletionOfConstruction ;
        sh:message "Wrong assignment Phase E (Warranty) or Transition D (Completion of Construction). Phase E should start and end after Transition D." ;
        sh:severity sh:Warning ;
      ] ;
    sh:property [                                 # Begin date
      sh:path time:hasBeginning ;
      sh:minCount 1 ;
      sh:message "Missing date (Beginning) in Phase E (Warranty) - min. count = 1." ;
      sh:severity sh:Warning ;
      ] ;
    sh:property [                                 # End date
      sh:path time:hasEnd ;
      sh:minCount 1 ;
      sh:message "Missing date (End) in Phase E (Warranty) - min. count = 1." ;
      sh:severity sh:Warning ;
      ] .

  osh:ShapeOfPhaseF a sh:NodeShape ;              # Phase F (DesignLife)
    sh:targetClass occp:PhaseF_DesignLife ;
    sh:property osh:GeneralDatePropertyShape ;    # Date format YYYY-MM-DD       
    sh:property [                                 # Phase order
        sh:path occp:after ;
        sh:class occp:CompletionOfConstruction ;
        sh:message "Wrong assignment of Phase F (Design Life) or Transition D (Completion of Construction). Phase F should start and end after Transition D." ;
        sh:severity sh:Warning ;
      ] ;
    sh:or (                                       # Phase order options - Phase D
      [
        sh:path occp:beginsBefore ;
        sh:class occp:PhaseD_Usage ;
      ]
      [
        sh:path occp:beginsWith ;
        sh:class occp:PhaseD_Usage ;
        sh:message "Wrong assignment of Phase F (Design Life) or Phase D (Usage). Phase F should begin before or with Phase D." ;
        sh:severity sh:Warning ;
      ]
    ) ;
    sh:property [
      sh:path occp:before ;
      sh:class occp:PhaseM_Deconstruction ;
      sh:message "Wrong assignment of Phase F (Design Life) or Phase M (Deconstruction). Phase F should begin and end before Phase M." ;
      sh:severity sh:Warning ;
    ] ;
    sh:property [                                 # Begin date options
      sh:path time:hasBeginning ;                 # Begin date has to be set (hasBeginning)
      sh:qualifiedValueShape [                    # The following object properties are valid options to set begin date
        sh:path (
          occp:hasEstimatedBeginning
          occp:hasActualBeginning
        ) ;
        sh:minCount 1 ;
        ] ;
      sh:message "Missing date (estimated or actual beginning) in Phase F (Design Life) - min. count = 1." ;
      sh:severity sh:Violation ;
      ] ;
    sh:property [                                 # Actual Begin date - limitation
      sh:path occp:hasActualBeginning ;
      sh:maxCount 1 ;
      sh:message "Too many dates for actual Beginning in Phase F (Design Life) - max. count = 1" ;
      sh:severity sh:Violation ;
      ] ;
      sh:property [                               # End date options
        sh:path time:hasEnd ;                     # End date has to be set (hasEnd)
        sh:qualifiedValueShape [                  # The following object properties are valid options to set end date
        sh:path (
          occp:hasEstimatedEnd
          occp:hasActualEnd
        ) ;
        sh:minCount 1 ;
        ] ;
      sh:message "Missing date (estimated or actual end) in Phase F (Design Life) - min. count = 1." ;
      sh:severity sh:Violation ;
      ] ;
    sh:property [                                 # Actual End date - limitation
      sh:path occp:hasActualEnd ; 
      sh:maxCount 1 ;
      sh:message "Too many dates for actual End in Phase F (Design Life) - max. count = 1." ;
      sh:severity sh:Violation ;
      ] .

  osh:ShapeOfPhaseG a sh:NodeShape ;              # Phase G (Inspection)
    sh:targetClass occp:PhaseG_Inspection ;
    sh:property osh:GeneralDatePropertyShape ;    # Date format YYYY-MM-DD 
    sh:property [                                 # Phase order
        sh:path occp:after ;
        sh:class occp:CompletionOfConstruction ;
        sh:message "Wrong assignment Phase G (Inspection) or Transition D (Completion of Construction). Phase G should start and end after Transition D." ;
        sh:severity sh:Warning ;
      ] ;
    sh:property [                                 # Phase order
        sh:path occp:before ;
        sh:class occp:PhaseM_Deconstruction ;
        sh:message "Wrong assignment Phase G (Inspection) or Phase M (Deconstruction). Phase G should begin and end before Phase M." ;
        sh:severity sh:Warning ;
      ] ;
    sh:property [                                 # Begin date options
      sh:path time:hasBeginning ;                 # Begin date has to be set (hasBeginning)
      sh:qualifiedValueShape [                    # The following object properties are valid options to set begin date
        sh:path (
          occp:hasEstimatedBeginning
          occp:hasActualBeginning
        ) ;
        ] ;
      ] ;
      sh:property [                               # End date options
        sh:path time:hasEnd ;                     # End date has to be set (hasEnd)
        sh:qualifiedValueShape [                  # The following object properties are valid options to set end date
        sh:path (
          occp:hasEstimatedEnd
          occp:hasActualEnd
        ) ;
        ] ;
      ] .


  osh:ShapeOfPhaseH a sh:NodeShape ;              # Phase H (SpecialEvents) - Special events can occur anytime, so this is to be handled like a super-phase. It can be used to describe or record events that have shaped the landscape like earthquakes in the past, but also events that occure during or after the construction's life cycle.
    sh:targetClass occp:PhaseH_SpecialEvents ;
    sh:property osh:GeneralDatePropertyShape ;    # Date format YYYY-MM-DD 
    sh:or (                                       # A special event is either happening on a single day or point in time or is a time interval.
      [                   
        sh:path time:hasTime ;                    # Event time (single point in time)
      ] 
      [
        sh:and (                                  # Special event interval (beginning AND end)
          [
            sh:path time:hasBeginning ;
          ]
          [
            sh:path time:hasEnd ;
          ]
        )
      ]
    ) .

  osh:ShapeOfPhaseK a sh:NodeShape ;              # Phase K (Damage)
    sh:targetClass occp:PhaseK_Damage ;
    sh:property osh:GeneralDatePropertyShape ;    # Date format YYYY-MM-DD 
    sh:property [                                 # Phase order
        sh:path occp:after ;
        sh:class occp:Submission ;
        sh:message "Wrong assignment Phase K (Damage) or Transition C (Submission). Phase K should be after Transition C." ;
        sh:severity sh:Warning ;
      ] ;
    sh:property [                                 # Phase order
        sh:path occp:before ;
        sh:class occp:CompletionOfDeconstruction ;
        sh:message "Wrong assignment Phase K (Damage) or Transition E (Completion of Deconstruction). Phase K should start and end before Transition E." ;
        sh:severity sh:Warning ;
      ] ;      
    sh:property [                                 # Begin date 
      sh:path time:hasBeginning ;
      ] ;
    sh:property [                                 # End date 
      sh:path time:hasEnd ;
      ] .

  osh:ShapeOfPhaseL a sh:NodeShape ;              # Phase L (Repair)
    sh:targetClass occp:PhaseL_Repair ;
    sh:property osh:GeneralDatePropertyShape ;    # Date format YYYY-MM-DD 
    sh:property [                                 # Phase order
        sh:path occp:after ;
        sh:class occp:Submission ;
        sh:message "Wrong assignment Phase L (Repair) or Transition C (Submission). Phase L should start and end after Transition C." ;
        sh:severity sh:Warning ;
      ] ;
    sh:property [                                 # Phase order
        sh:path occp:before ;
        sh:class occp:PhaseM_Deconstruction ;
        sh:message "Wrong assignment Phase L (Repair) or Phase M (Deconstruction). Phase L should start and end before Phase M." ;
        sh:severity sh:Warning ;
      ] ;
    sh:property [                                 # Begin date options
      sh:path time:hasBeginning ;                 # Begin date has to be set (hasBeginning)
      sh:qualifiedValueShape [                    # The following object properties are valid options to set begin date
        sh:path (
          occp:hasEstimatedBeginning
          occp:hasActualBeginning
        ) ;
        sh:minCount 1 ;
        ] ;
      sh:message "Missing date (estimated or actual beginning) in Phase L (Repair) - min. count = 1." ;
      sh:severity sh:Violation ;
      ] ;
    sh:property [                                 # Actual Begin date - limitation
      sh:path occp:hasActualBeginning ;
      sh:maxCount 1 ;
      sh:message "Too many dates for actual Beginning in Phase L (Repair) - max. count = 1" ;
      sh:severity sh:Violation ;
      ] ;
      sh:property [                               # End date options
        sh:path time:hasEnd ;                     # End date has to be set (hasEnd)
        sh:qualifiedValueShape [                  # The following object properties are valid options to set end date
        sh:path (
          occp:hasEstimatedEnd
          occp:hasActualEnd
        ) ;
        sh:minCount 1 ;
        ] ;
      sh:message "Missing date (estimated or actual end) in Phase L (Repair) - min. count = 1." ;
      sh:severity sh:Violation ;
      ] ;
    sh:property [                                 # Actual End date - limitation
      sh:path occp:hasActualEnd ; 
      sh:maxCount 1 ;
      sh:message "Too many dates for actual End in Phase L (Repair) - max. count = 1." ;
      sh:severity sh:Violation ;
      ] .

  osh:ShapeOfPhaseM a sh:NodeShape ;              # Phase M (Deconstruction)
    sh:targetClass occp:PhaseM_Deconstruction ;
    sh:property osh:GeneralDatePropertyShape ;    # Date format YYYY-MM-DD       
    sh:property [                                 # Phase order
        sh:path occp:after ;
        sh:class occp:CompletionOfConstruction ;
        sh:message "Wrong assignment Phase M (Deconstruction) or Transition D (Completion Of Construction). Phase M should start and end after Transition D." ;
        sh:severity sh:Warning ;
      ] ;
    sh:property [                                 # Begin date options
      sh:path time:hasBeginning ;                 # Begin date has to be set (hasBeginning)
      sh:qualifiedValueShape [                    # The following object properties are valid options to set begin date
        sh:path (
          occp:hasEstimatedBeginning
          occp:hasActualBeginning
        ) ;
        sh:minCount 1 ;
        ] ;
      sh:message "Missing date (estimated or actual beginning) in Phase M (Deconstruction) - min. count = 1." ;
      sh:severity sh:Violation ;
      ] ;
    sh:property [                                 # Actual Begin date - limitation
      sh:path occp:hasActualBeginning ;
      sh:maxCount 1 ;
      sh:message "Too many dates for actual Beginning in Phase M (Deconstruction) - max. count = 1" ;
      sh:severity sh:Violation ;
      ] ;
      sh:property [                               # End date options
        sh:path time:hasEnd ;                     # End date has to be set (hasEnd)
        sh:qualifiedValueShape [                  # The following object properties are valid options to set end date
        sh:path (
          occp:hasEstimatedEnd
          occp:hasActualEnd
        ) ;
        sh:minCount 1 ;
        ] ;
      sh:message "Missing date (estimated or actual end) in Phase M (Deconstruction) - min. count = 1." ;
      sh:severity sh:Violation ;
      ] ;
    sh:property [                                 # Actual End date - limitation
      sh:path occp:hasActualEnd ; 
      sh:maxCount 1 ;
      sh:message "Too many dates for actual End in Phase M (Deconstruction) - max. count = 1." ;
      sh:severity sh:Violation ;
      ] .

  osh:ShapeOfTransitionE a sh:NodeShape ;         # Transition E (Completion Of Deconstruction)
    sh:targetClass occp:CompletionOfDeconstruction ;
    sh:property osh:GeneralDatePropertyShape ;    # Date format YYYY-MM-DD       
    sh:or (                                       # Transition order options
      [                       
        sh:path occp:after ;                
        sh:class occp:PhaseM_Deconstruction ;     
      ]
      [                       
        sh:path occp:endsWith ;                
        sh:class occp:PhaseM_Deconstruction ;
        sh:message "Wrong assignment of Transition E (Completion Of Deconstruction) or Phase M (Deconstruction). Transition E must occur after or end with Phase M." ;
        sh:severity sh:Violation ;
      ]
    ) ;
    sh:property [                                 # Transition time (single point in time)
      sh:path time:hasTime ;
      sh:minCount 1 ;
      sh:maxCount 1 ;
      sh:message "Missing or too many date(s) for Transition E (Completion Of Deconstruction) - max. & min. count = 1." ;
      sh:severity sh:Violation ;
      ] .


### ORDER OF INSTANTS

    ### PHASE A INSTANTS
        # PHASE ASSIGNMENT

            osh:PhaseAInstantShape a sh:NodeShape ;
                sh:targetClass occp:PhaseA_Instant ;
                sh:property [
                    sh:path occp:hasPhase ;
                    sh:class occp:PhaseA_Planning ;
                    sh:message "Wrong Phase/Instant assignment - Instant should belong to Phase A (Planning)." ;
                    sh:severity sh:Violation ;
            ] .

        ### INSTANT SHAPES PHASE A - PLANNING

            osh:BeginningOfPlanningShape a sh:NodeShape ;   # Instant Beginning Of Planning (Phase A - Planning)
                sh:targetClass occp:BeginningOfPlanning ;   
                sh:property osh:GeneralDatePropertyShape ;  # Date format YYYY-MM-DD 
                sh:property [                               # Instant (Beginning Of Planning) starts a new Phase A (Planning).
                    sh:path occp:startsPhase ;              
                    sh:class occp:PhaseA_Planning ;
                ] ;
                sh:property [                               # Instant (Beginning Of Planning) starts a new Cycle A (Planning/Review).
                    sh:path occp:startsCycle ;              
                    sh:class occp:CycleA_PlanningReview ;
                ] ;
                sh:property [                               # Instant's chronological order within the Phase
                    sh:path occp:before ;                   
                    sh:class occp:DataProcurement ;
                    sh:message "Wrong assignment (chronological order) of Beginning Of Planning or Data Procurement." ;
                    sh:severity sh:Violation ;
                ] ;
                sh:property [                               # Instant has a date as time stamp.
                    sh:path time:hasTime ;                  # Time stamp has to be set 
                    sh:qualifiedValueShape [                # The following object properties are valid options to set time stamp
                        sh:path (
                        occp:hasEstimatedTime
                        occp:hasActualTime
                        ) ;
                        sh:minCount 1 ;
                        ] ;
                    sh:message "Missing time stamp (Estimated or Actual Time) for Beginning of Planning - min. count = 1." ;
                    sh:severity sh:Violation ;
                ] ;
                sh:property [                               # Actual Time stamp - limitation
                    sh:path occp:hasActualTime ;
                    sh:maxCount 1 ;
                    sh:message "Too many dates for Actual Time stamp for Beginning of Planning - max. count = 1" ;
                    sh:severity sh:Violation ;
                ] .

            osh:DataProcurementShape a sh:NodeShape ;       # Instant Data Procurement (Phase A - Planning)
                sh:targetClass occp:DataProcurement ;       
                sh:property osh:GeneralDatePropertyShape ;  # Date format YYYY-MM-DD 
                sh:property [                               # Instant's chronological order within the Phase
                    sh:path occp:after ;                    
                    sh:class occp:BeginningOfPlanning ;
                    sh:message "Wrong assignment (chronological order) of Data Procurement or Beginning Of Planning." ;
                    sh:severity sh:Violation ;
                ] ;
                sh:property [                               # Instant's chronological order within the Phase
                    sh:path occp:before ;                   
                    sh:class occp:SubmissionToReview ;
                    sh:message "Wrong assignment (chronological order) of Data Procurement or Submission To Review." ;
                    sh:severity sh:Violation ;
                ] ;
                sh:property [                               # Instant has a date as time stamp.
                    sh:path time:hasTime ;      
                    sh:minCount 1 ;            
                    sh:message "Missing date for Data Procurement - min. count = 1." ;
                    sh:severity sh:Violation ;
                ] .

            osh:Edit_BSTRShape a sh:NodeShape ;             # Instant Edit Before Submission To Review (Phase A - Planning)
                sh:targetClass occp:Edit_BSTR ; 
                sh:property osh:GeneralDatePropertyShape ;  # Date format YYYY-MM-DD 
                sh:property [                               # Instant's chronological order within the Phase
                    sh:path occp:after ;                    
                    sh:class occp:BeginningOfPlanning ;
                    sh:message "Wrong assignment (chronological order) of Edit Before Submission To Review or Beginning Of Planning." ;
                    sh:severity sh:Violation ;
                ] ;
                sh:property [                               # Instant's chronological order within the Phase
                    sh:path occp:before ;                   
                    sh:class occp:SubmissionToReview ;
                    sh:message "Wrong assignment (chronological order) of Edit Before Submission To Review or Submission To Review." ;
                    sh:severity sh:Violation ;
                ] ;
                sh:property [                               # Instant has a date as time stamp.
                    sh:path time:hasTime ;                  
                    sh:minCount 1 ;
                    sh:message "Missing date for Edit Before Submission To Review - min. count = 1." ;
                    sh:severity sh:Violation ;
                ] .

            osh:SubmissionToReviewShape a sh:NodeShape ;    # Instant Submission To Review (Phase A - Planning)
                sh:targetClass occp:SubmissionToReview ;
                sh:property osh:GeneralDatePropertyShape ;  # Date format YYYY-MM-DD 
                sh:or (                                     # Instant's chronological order within the Phase - 2 Options
                    [
                        sh:path occp:after ;                    
                        sh:class occp:Edit_BSTR ;
                    ]
                    [
                        sh:path occp:after ;                    
                        sh:class occp:Edit_ASTR ;
                        sh:message "Wrong assignment (chronological order) of Submission To Review or Edit Before/After Submission To Review." ;
                        sh:severity sh:Violation ;
                    ]
                ) ;
                sh:property [                               # Instant has a date as time stamp.
                    sh:path time:hasTime ;                  # Time stamp has to be set 
                    sh:qualifiedValueShape [                # The following object properties are valid options to set time stamp
                        sh:path (
                        occp:hasEstimatedTime
                        occp:hasActualTime
                        ) ;
                        sh:minCount 1 ;
                        ] ;
                    sh:message "Missing time stamp (Estimated or Actual Time) for Submission to Review - min. count = 1." ;
                    sh:severity sh:Violation ;
                ] .

            osh:Edit_ASTRShape a sh:NodeShape ;             # Instant Edit After Submission To Review (Phase A - Planning)
                sh:targetClass occp:Edit_ASTR ;
                sh:property osh:GeneralDatePropertyShape ;  # Date format YYYY-MM-DD 
                sh:property [
                    sh:path occp:after ;
                    sh:qualifiedValueShape [
                        sh:path (
                            sh:class occp:SubmissionToReview 
                            sh:class occp:ReviewRejection
                        ) ;
                    ] ;
                    sh:qualifiedMinCount 1 ;
                    sh:message "Wrong assignment (Submission To Review/Edit After Submission To Review)." ;
                    sh:severity sh:Violation ;
                ] ;
                sh:property [                               # Instant (Edit After Submission To Review) starts a new Cycle A (Planning/Review).
                    sh:path occp:startsCycle ;              
                    sh:class occp:CycleA_PlanningReview ;
                ] ;
                sh:property [
                    sh:path time:hasTime ;                  # Instant needs a date as time stamp.
                ] .


        ### CYCLE SHAPE

            osh:CycleAShape a sh:NodeShape ;
                sh:targetClass occp:CycleA_PlanningReview ;
                sh:property osh:GeneralDatePropertyShape ;  # Date format YYYY-MM-DD 
                sh:property [                               # Actual Begin date - limitation
                    sh:path occp:hasActualBeginning ;
                    sh:maxCount 1 ;
                    sh:message "Too many dates for actual Beginning for Cycle A (Planning and Review) - max. count = 1" ;
                    sh:severity sh:Violation ;
                ] ;
                sh:property [                               # End date options
                    sh:path time:hasEnd ;                   # End date has to be set (hasEnd)
                    sh:qualifiedValueShape [                # The following object properties are valid options to set end date
                    sh:path (
                        occp:hasEstimatedEnd
                        occp:hasActualEnd
                    ) ;
                    sh:minCount 1 ;
                    ] ;
                    sh:message "Missing date (estimated or actual end) for Cycle A (Planning and Review) - min. count = 1." ;
                    sh:severity sh:Violation ;
                ] ;
                sh:property [                               # Actual End date - limitation
                    sh:path occp:hasActualEnd ; 
                    sh:maxCount 1 ;
                    sh:message "Too many dates for actual End in Phase M (Deconstruction) - max. count = 1." ;
                    sh:severity sh:Violation ;
                ] .

    ### PHASE B INSTANTS
        # PHASE ASSIGNMENT        
    
            osh:PhaseBInstantShape a sh:NodeShape ;
                sh:targetClass occp:PhaseB_Instant ;
                sh:property [
                    sh:path occp:hasPhase ;
                    sh:class occp:PhaseB_Review ;
                    sh:message "Wrong Phase/Instant assignment - Instant should belong to Phase B (Review)." ;
                    sh:severity sh:Violation ;
            ] .

        ### INSTANT SHAPES PHASE B - REVIEW

            osh:ReviewStartShape a sh:NodeShape ;           # Instant Review Start (Phase B - Review)
                sh:targetClass occp:ReviewStart ;
                sh:property osh:GeneralDatePropertyShape ;  # Date format YYYY-MM-DD
                sh:property [
                    sh:path occp:startsPhase ;
                    sh:class occp:PhaseB_Review ;
                ] ;
                sh:or (                                     # Instant's chronological order within the Phase - 2 Options
                    [
                        sh:path occp:before ;
                        sh:class occp:ReviewApproval ;
                        sh:message "Wrong assignment (chronological order) of Review Start or Review Approval." ;
                        sh:severity sh:Violation ;
                    ]
                    [
                        sh:path occp:before ;
                        sh:class occp:ReviewRejection ;
                        sh:message "Wrong assignment (chronological order) of Review Start or Review Rejection." ;
                        sh:severity sh:Violation ;
                    ]
                ) ;
                sh:property [
                    sh:path occp:after ;
                    sh:class occp:SubmissionToReview ;
                    sh:message "Wrong assignment (chronological order) of Review Start or Submission to Review." ;
                    sh:severity sh:Violation ;
                ] ;
                sh:property [                               # Instant has a date as time stamp.
                    sh:path time:hasTime ;                  # Time stamp has to be set 
                    sh:qualifiedValueShape [                # The following object properties are valid options to set time stamp
                        sh:path (
                        occp:hasEstimatedTime
                        occp:hasActualTime
                        ) ;
                        sh:minCount 1 ;
                        ] ;
                    sh:message "Missing time stamp (Estimated or Actual Time) for Review Start - min. count = 1." ;
                    sh:severity sh:Violation ;
                ] .

            osh:ReviewApprovalShape a sh:NodeShape ;        # Instant Review Approval (Phase B - Review)
                sh:targetClass occp:ReviewApproval ;
                sh:property osh:GeneralDatePropertyShape ;  # Date format YYYY-MM-DD
                sh:property [
                    sh:path occp:endsPhase ;
                    sh:class occp:PhaseA_Planning ;
                ] ;
                sh:property [
                    sh:path occp:endsPhase ;
                    sh:class occp:PhaseB_Review ;
                ] ;
                sh:property [                               # Instant's chronological order within the Phase
                    sh:path occp:after ;
                    sh:class occp:ReviewStart ;
                    sh:message "Wrong assignment (chronological order) of Review Approval or Review Start." ;
                    sh:severity sh:Violation ;
                ] ;
                sh:property [                               # Instant (Review Approval) ends current Cycle A (Planning/Review).
                    sh:path occp:endsCycle ;              
                    sh:class occp:CycleA_PlanningReview ;
                ] ;
                sh:property [                                # Instant has a date as time stamp.
                    sh:path time:hasTime ;
                    sh:maxCount 1 ;
                    sh:message "Too many dates for Review Approval - max. count = 1." ;
                    sh:severity sh:Violation ;
                ] .

            osh:ReviewRejectionShape a sh:NodeShape ;        # Instant Review Rejection (Phase B - Review)
                sh:targetClass occp:ReviewRejection ;
                sh:property osh:GeneralDatePropertyShape ;   # Date format YYYY-MM-DD
                sh:property [                                # Instant's chronological order within the Phase      
                    sh:path occp:after ;
                    sh:class occp:ReviewStart ;
                    sh:message "Wrong assignment (chronological order) of Review Rejection or Review Start." ;
                    sh:severity sh:Violation ;
                ] ;
                sh:property [                                # Instant (Review Rejection) ends current Cycle A (Planning/Review).
                    sh:path occp:endsCycle ;              
                    sh:class occp:CycleA_PlanningReview ;
                ] ;
                sh:property [                                # Instant has a date as time stamp.
                    sh:path time:hasTime ;
                ] .


    ### PHASE C INSTANTS
        # PHASE ASSIGNMENT
            osh:PhaseCInstantShape a sh:NodeShape ;
                sh:targetClass occp:PhaseC_Instant ;
                sh:property [
                    sh:path occp:hasPhase ;
                    sh:class occp:PhaseC_Construction ;
                    sh:message "Wrong Phase/Instant assignment - Instant should belong to Phase C (Construction)." ;
                    sh:severity sh:Violation ;
                ] .

        ### INSTANT SHAPES PHASE C - CONSTRUCTION

            osh:ConstructionStartShape a sh:NodeShape ;      # Instant Construction Start (Phase C - Construction)
                sh:targetClass occp:ConstructionStart ;
                sh:property osh:GeneralDatePropertyShape ;   # Date format YYYY-MM-DD
                sh:property [                                
                    sh:path occp:startsPhase ;
                    sh:class occp:PhaseC_Construction ;
                ] ;
                sh:property [                                # Instant's chronological order within the Phase
                    sh:path occp:before ;
                    sh:class occp:ConstructionCompletion ;
                    sh:message "Wrong assignment (chronological order) of Construction Start or Construction Completion." ;
                    sh:severity sh:Violation ;
                ] ;
                sh:property [                               # Instant has a date as time stamp.
                    sh:path time:hasTime ;                  # Time stamp has to be set 
                    sh:qualifiedValueShape [                # The following object properties are valid options to set time stamp
                        sh:path (
                        occp:hasEstimatedTime
                        occp:hasActualTime
                        ) ;
                        sh:minCount 1 ;
                        ] ;
                    sh:message "Missing time stamp (Estimated or Actual Time) for Construction Start - min. count = 1." ;
                    sh:severity sh:Violation ;
                ] ;
                sh:property [                               # Actual Time stamp - limitation
                    sh:path occp:hasActualTime ;
                    sh:maxCount 1 ;
                    sh:message "Too many dates for Actual Time stamp for Construction Start - max. count = 1" ;
                    sh:severity sh:Violation ;
                ] .

            osh:ConstructionCompletionShape a sh:NodeShape ; # Instant Construction Completion (Phase C - Construction)
                sh:targetClass occp:ConstructionCompletion ;
                sh:property osh:GeneralDatePropertyShape ;   # Date format YYYY-MM-DD
                sh:property [                                # Instant's chronological order within the Phase
                    sh:path occp:after ;
                    sh:class occp:ConstructionStart ;
                    sh:message "Wrong assignment (chronological order) of Construction Completion or Construction Start." ;
                    sh:severity sh:Violation ;
                ] ;
                sh:or (                                     # Instant's chronological order within the Phase - 2 Options
                    [
                        sh:path occp:before ;
                        sh:class occp:ConstructionAcceptance ;
                        sh:message "Wrong assignment (chronological order) of Construction Completion or Construction Acceptance." ;
                        sh:severity sh:Violation ;
                    ]
                    [
                        sh:path occp:before ;
                        sh:class occp:DefectElimStart ;
                        sh:message "Wrong assignment (chronological order) of Construction Completion or Defect Elimination Start." ;
                        sh:severity sh:Violation ;
                    ]
                ) ;
                sh:property [                               # Instant has a date as time stamp.
                    sh:path time:hasTime ;                  # Time stamp has to be set 
                    sh:qualifiedValueShape [                # The following object properties are valid options to set time stamp
                        sh:path (
                        occp:hasEstimatedTime
                        occp:hasActualTime
                        ) ;
                        sh:minCount 1 ;
                        ] ;
                    sh:message "Missing time stamp (Estimated or Actual Time) for Construction Completion - min. count = 1." ;
                    sh:severity sh:Violation ;
                ] ;
                sh:property [                               # Actual Time stamp - limitation
                    sh:path occp:hasActualTime ;
                    sh:maxCount 1 ;
                    sh:message "Too many dates for Actual Time stamp for Construction Completion - max. count = 1" ;
                    sh:severity sh:Violation ;
                ] .

            osh:DefectElimStartShape a sh:NodeShape ;        # Instant Defect Elimination Start (Phase C - Construction)
                sh:targetClass occp:DefectElimStart ;
                sh:property osh:GeneralDatePropertyShape ;   # Date format YYYY-MM-DD
                sh:property [                                # Instant's chronological order within the Phase
                    sh:path occp:after ;
                    sh:class occp:ConstructionCompletion ;
                    sh:message "Wrong assignment (chronological order) of Defect Elimination Start or Construction Completion." ;
                    sh:severity sh:Violation ;
                ] ;
                sh:property [
                    sh:path occp:before ;
                    sh:class occp:DefectElimCompletion ;
                    sh:message "Wrong assignment (chronological order) of Defect Elimination Start or Defect Elimination Completion." ;
                    sh:severity sh:Violation ;
                ] ;            
                sh:property [                               # Instant has a date as time stamp.
                    sh:path time:hasTime ;                  # Time stamp has to be set 
                    sh:qualifiedValueShape [                # The following object properties are valid options to set time stamp
                        sh:path (
                        occp:hasEstimatedTime
                        occp:hasActualTime
                        ) ;
                        sh:minCount 1 ;
                        ] ;
                    sh:message "Missing time stamp (Estimated or Actual Time) for Defect Elimination Start - min. count = 1." ;
                    sh:severity sh:Violation ;
                ] .

            osh:DefectElimCompletionShape a sh:NodeShape ;        # Instant Defect Elimination Completion (Phase C - Construction)
                sh:targetClass occp:DefectElimCompletion ;
                sh:property osh:GeneralDatePropertyShape ;   # Date format YYYY-MM-DD
                sh:property [                                # Instant's chronological order within the Phase
                    sh:path occp:after ;
                    sh:class occp:DefectElimStart ;
                    sh:message "Wrong assignment (chronological order) of Defect Elimination Completion or Defect Elimination Start." ;
                    sh:severity sh:Violation ;
                ] ;
                sh:property [
                    sh:path occp:before ;
                    sh:class occp:ConstructionAcceptance ;
                    sh:message "Wrong assignment (chronological order) of Defect Elimination Completion or Construction Acceptance." ;
                    sh:severity sh:Violation ;
                ] ;            
                sh:property [                               # Instant has a date as time stamp.
                    sh:path time:hasTime ;                  # Time stamp has to be set 
                    sh:qualifiedValueShape [                # The following object properties are valid options to set time stamp
                        sh:path (
                        occp:hasEstimatedTime
                        occp:hasActualTime
                        ) ;
                        sh:minCount 1 ;
                        ] ;
                    sh:message "Missing time stamp (Estimated or Actual Time) for Defect Elimination Completion - min. count = 1." ;
                    sh:severity sh:Violation ;
                ] .

            osh:ConstructionAcceptanceShape a sh:NodeShape ;      # Instant Construction Acceptance (Phase C - Construction)
                sh:targetClass occp:ConstructionAcceptance ;
                sh:property osh:GeneralDatePropertyShape ;   # Date format YYYY-MM-DD
                sh:property [                                
                    sh:path occp:endsPhase ;
                    sh:class occp:PhaseC_Construction ;
                ] ;
                sh:property [                                # Instant's chronological order 
                    sh:path occp:before ;
                    sh:class occp:UsageStart ;
                    sh:message "Wrong assignment (chronological order) of Construction Acceptance or Usage Start." ;
                    sh:severity sh:Warning ;
                ] ;
                sh:or (                                     # Instant's chronological order within the Phase - 2 Options
                    [
                        sh:path occp:after ;
                        sh:class occp:ConstructionCompletion ;
                        sh:message "Wrong assignment (chronological order) of Construction Acceptance or Construction Completion." ;
                        sh:severity sh:Violation ;
                    ]
                    [
                        sh:path occp:after ;
                        sh:class occp:DefectElimCompletion ;
                        sh:message "Wrong assignment (chronological order) of Construction Acceptance or Defect Elimination Completion." ;
                        sh:severity sh:Violation ;
                    ]
                ) ;
                sh:property [                               # Instant has a date as time stamp.
                    sh:path time:hasTime ;                  # Time stamp has to be set 
                    sh:qualifiedValueShape [                # The following object properties are valid options to set time stamp
                        sh:path (
                        occp:hasEstimatedTime
                        occp:hasActualTime
                        ) ;
                        sh:minCount 1 ;
                        ] ;
                    sh:message "Missing time stamp (Estimated or Actual Time) for Construction Acceptance - min. count = 1." ;
                    sh:severity sh:Violation ;
                ] ;
                sh:property [                               # Actual Time stamp - limitation
                    sh:path occp:hasActualTime ;
                    sh:maxCount 1 ;
                    sh:message "Too many dates for Actual Time stamp for Construction Acceptance - max. count = 1" ;
                    sh:severity sh:Violation ;
                ] .

    ### PHASE D INSTANTS
        # PHASE ASSIGNMENT
            osh:PhaseDInstantShape a sh:NodeShape ;
                sh:targetClass occp:PhaseD_Instant ;
                sh:property [
                    sh:path occp:hasPhase ;
                    sh:class occp:PhaseD_Usage ;
                    sh:message "Wrong Phase/Instant assignment - Instant should belong to Phase D (Usage)." ;
                    sh:severity sh:Violation ;
                ] .

        ### INSTANT SHAPES PHASE D - USAGE
            osh:UsageChangeShape a sh:NodeShape ;      # Instant Usage Change (Phase D - Usage)
                sh:targetClass occp:UsageChange ;
                sh:property osh:GeneralDatePropertyShape ;   # Date format YYYY-MM-DD
                sh:property [                                # The current Usage Phase is ended with a Change of Usage. 
                    sh:path occp:endsPhase ;                
                    sh:class occp:PhaseD_Usage ;
                ] ;
                sh:property [                                # A new Usage Phase is started with a Change of Usage.
                    sh:path occp:startsPhase ;
                    sh:class occp:PhaseD_Usage ;
                ] ;
                sh:property [                                # Instant's chronological order 
                    sh:path occp:after ;
                    sh:class occp:ConstructionAcceptance ;
                    sh:message "Wrong assignment (chronological order) of Change of Usage or Construction Acceptance." ;
                    sh:severity sh:Violation ;
                ] ;
                sh:property [                                # Instant's chronological order within the Phase
                    sh:path occp:after ;
                    sh:class occp:UsageStart ;
                    sh:message "Wrong assignment (chronological order) of Change of Usage or Usage Start." ;
                    sh:severity sh:Violation ;
                ] ;
                sh:property [                                
                    sh:path occp:before ;
                    sh:class occp:DeconstructionCompletion ;
                    sh:message "Wrong assignment (chronological order) of Usage Change or Deconstruction Completion." ;
                    sh:severity sh:Violation ;
                ] ;
                sh:property [                                # Instant has a date as time stamp.
                    sh:path time:hasTime ;                   # Time stamp has to be set 
                    sh:qualifiedValueShape [                 # The following object properties are valid options to set time stamp - no minCount.
                        sh:path (
                        occp:hasEstimatedTime
                        occp:hasActualTime
                        ) ;
                        ] ;
                    sh:message "Missing time stamp (Estimated or Actual Time) for Usage Change." ;
                    sh:severity sh:Warning ;
                ] .

            osh:UsageEndShape a sh:NodeShape ;      # Instant Usage End (Phase D - Usage)
                sh:targetClass occp:UsageEnd ;
                sh:property osh:GeneralDatePropertyShape ;   # Date format YYYY-MM-DD
                sh:property [                                # The current Usage Phase is ended with Usage End
                    sh:path occp:endsPhase ;                
                    sh:class occp:PhaseD_Usage ;
                ] ;
                sh:or (                                     # Instant's chronological order within the Phase - 2 Options
                    [
                        sh:path occp:after ;
                        sh:class occp:UsageStart ;
                        sh:message "Wrong assignment (chronological order) of Usage End or Usage Start." ;
                        sh:severity sh:Violation ;
                    ]
                    [
                        sh:path occp:after ;
                        sh:class occp:UsageChange ;
                        sh:message "Wrong assignment (chronological order) of Usage End or Usage Change." ;
                        sh:severity sh:Violation ;
                    ]
                ) ;
                sh:property [                                
                    sh:path occp:before ;
                    sh:class occp:DeconstructionCompletion ;
                    sh:message "Wrong assignment (chronological order) of Usage End or Deconstruction Completion." ;
                    sh:severity sh:Violation ;
                ] ;
                sh:property [                                # Instant has a date as time stamp.
                    sh:path time:hasTime ;                   # Time stamp has to be set 
                    sh:qualifiedValueShape [                 # The following object properties are valid options to set time stamp
                        sh:path (
                        occp:hasEstimatedTime
                        occp:hasActualTime
                        ) ;
                        sh:minCount 1 ;
                        ] ;
                    sh:message "Missing time stamp (Estimated or Actual Time) for Usage End - min. count = 1." ;
                    sh:severity sh:Violation ;
                ] .

            osh:UsageStartShape a sh:NodeShape ;      # Instant Usage Start (Phase D - Usage)
                sh:targetClass occp:UsageEnd ;
                sh:property osh:GeneralDatePropertyShape ;   # Date format YYYY-MM-DD
                sh:property [                                # A new Usage Phase is started with Usage Start
                    sh:path occp:startsPhase ;                
                    sh:class occp:PhaseD_Usage ;
                ] ;
                sh:property [                                # Instant's chronological order 
                        sh:path occp:after ;
                        sh:class occp:ConstructionAcceptance ;
                        sh:message "Wrong assignment (chronological order) of Usage Start or Construction Acceptance." ;
                        sh:severity sh:Violation ;
                ] ;
                sh:property [                                
                    sh:path occp:before ;
                    sh:class occp:DeconstructionCompletion ;
                    sh:message "Wrong assignment (chronological order) of Usage Start or Deconstruction Completion." ;
                    sh:severity sh:Violation ;
                ] ;
                sh:property [                                # Instant has a date as time stamp.
                    sh:path time:hasTime ;                   # Time stamp has to be set 
                    sh:qualifiedValueShape [                 # The following object properties are valid options to set time stamp
                        sh:path (
                        occp:hasEstimatedTime
                        occp:hasActualTime
                        ) ;
                        sh:minCount 1 ;
                        ] ;
                    sh:message "Missing time stamp (Estimated or Actual Time) for Usage Start - min. count = 1." ;
                    sh:severity sh:Violation ;
                ] .

    ### PHASE E INSTANTS
        # PHASE ASSIGNMENT
            osh:PhaseEInstantShape a sh:NodeShape ;
                sh:targetClass occp:PhaseE_Instant ;
                sh:property [
                    sh:path occp:hasPhase ;
                    sh:class occp:PhaseE_Warranty ;
                    sh:message "Wrong Phase/Instant assignment - Instant should belong to Phase E (Warranty)." ;
                    sh:severity sh:Violation ;
                ] .

        ### INSTANT SHAPES PHASE E - WARRANTY
            osh:WarrantyChangeShape a sh:NodeShape ;         # Instant Warranty Change (Phase E - Warranty)
                sh:targetClass occp:WarrantyChange ;
                sh:property osh:GeneralDatePropertyShape ;   # Date format YYYY-MM-DD
                sh:property [                                # The current Warranty Phase is ended with a Change of Warranty. 
                    sh:path occp:endsPhase ;                
                    sh:class occp:PhaseE_Warranty ;
                ] ;
                sh:property [                                # A new Warranty Phase is started with a Change of Warranty.
                    sh:path occp:startsPhase ;
                    sh:class occp:PhaseE_Warranty ;
                ] ;
                sh:property [                                # Instant's chronological order 
                    sh:path occp:after ;
                    sh:class occp:ConstructionAcceptance ;
                    sh:message "Wrong assignment (chronological order) of Change of Warranty or Construction Acceptance." ;
                    sh:severity sh:Violation ;
                ] ;
                sh:property [                                # Instant's chronological order within the Phase
                    sh:path occp:after ;
                    sh:class occp:WarrantyStart ;
                    sh:message "Wrong assignment (chronological order) of Change of Warranty or Warranty Start." ;
                    sh:severity sh:Violation ;
                ] ;
                sh:property [                                
                    sh:path occp:before ;
                    sh:class occp:DeconstructionCompletion ;
                    sh:message "Wrong assignment (chronological order) of Warranty Change or Deconstruction Completion." ;
                    sh:severity sh:Violation ;
                ] ;
                sh:property [                                # Instant has a date as time stamp.
                    sh:path time:hasTime ;                   # Time stamp has to be set 
                    sh:qualifiedValueShape [                 # The following object properties are valid options to set time stamp - no minCount.
                        sh:path (
                        occp:hasEstimatedTime
                        occp:hasActualTime
                        ) ;
                        ] ;
                    sh:message "Missing time stamp (Estimated or Actual Time) for Warranty Change." ;
                    sh:severity sh:Warning ;
                ] .

            osh:WarrantyEndShape a sh:NodeShape ;            # Instant Warranty End (Phase E - Warranty)
                sh:targetClass occp:WarrantyEnd ;
                sh:property osh:GeneralDatePropertyShape ;   # Date format YYYY-MM-DD
                sh:property [                                # The current Warranty Phase is ended with Warranty End
                    sh:path occp:endsPhase ;                
                    sh:class occp:PhaseE_Warranty ;
                ] ;
                sh:or (                                     # Instant's chronological order within the Phase - 2 Options
                    [
                        sh:path occp:after ;
                        sh:class occp:WarrantyStart ;
                        sh:message "Wrong assignment (chronological order) of Warranty End or Warranty Start." ;
                        sh:severity sh:Violation ;
                    ]
                    [
                        sh:path occp:after ;
                        sh:class occp:WarrantyChange ;
                        sh:message "Wrong assignment (chronological order) of Warranty End or Warranty Change." ;
                        sh:severity sh:Violation ;
                    ]
                ) ;
                sh:property [                                # Instant has a date as time stamp.
                    sh:path time:hasTime ;                   # Time stamp has to be set 
                    sh:qualifiedValueShape [                 # The following object properties are valid options to set time stamp
                        sh:path (
                        occp:hasEstimatedTime
                        occp:hasActualTime
                        ) ;
                        sh:minCount 1 ;
                        ] ;
                    sh:message "Missing time stamp (Estimated or Actual Time) for Warranty End - min. count = 1." ;
                    sh:severity sh:Violation ;
                ] .

            osh:WarrantyStartShape a sh:NodeShape ;          # Instant Warranty Start (Phase E - Warranty)
                sh:targetClass occp:WarrantyEnd ;
                sh:property osh:GeneralDatePropertyShape ;   # Date format YYYY-MM-DD
                sh:property [                                # A new Warranty Phase is started with Warranty Start
                    sh:path occp:startsPhase ;                
                    sh:class occp:PhaseE_Warranty ;
                ] ;
                sh:property [                                # Instant's chronological order 
                        sh:path occp:after ;
                        sh:class occp:ConstructionAcceptance ;
                        sh:message "Wrong assignment (chronological order) of Warranty Start or Construction Acceptance." ;
                        sh:severity sh:Violation ;
                ] ;
                sh:property [                                
                    sh:path occp:before ;
                    sh:class occp:DeconstructionCompletion ;
                    sh:message "Wrong assignment (chronological order) of Warranty Start or Deconstruction Completion." ;
                    sh:severity sh:Violation ;
                ] ;
                sh:property [                                # Instant has a date as time stamp.
                    sh:path time:hasTime ;                   # Time stamp has to be set 
                    sh:qualifiedValueShape [                 # The following object properties are valid options to set time stamp
                        sh:path (
                        occp:hasEstimatedTime
                        occp:hasActualTime
                        ) ;
                        sh:minCount 1 ;
                        ] ;
                    sh:message "Missing time stamp (Estimated or Actual Time) for Warranty Start - min. count = 1." ;
                    sh:severity sh:Violation ;
                ] .

    ### PHASE F INSTANTS
        # PHASE ASSIGNMENT
            osh:PhaseFInstantShape a sh:NodeShape ;
                sh:targetClass occp:PhaseF_Instant ;
                sh:property [
                    sh:path occp:hasPhase ;
                    sh:class occp:PhaseF_DesignLife ;
                    sh:message "Wrong Phase/Instant assignment - Instant should belong to Phase F (Design Life)." ;
                    sh:severity sh:Violation ;
                ] .

        ### INSTANT SHAPES PHASE F - DESIGN LIFE
            osh:DesignLifeChangeShape a sh:NodeShape ;       # Instant Design Life Change (Phase F - Design Life)
                sh:targetClass occp:DesignLifeChange ;
                sh:property osh:GeneralDatePropertyShape ;   # Date format YYYY-MM-DD
                sh:property [                                # The current Design Life Phase is ended with a Change of Design Life. 
                    sh:path occp:endsPhase ;                
                    sh:class occp:PhaseF_DesignLife ;
                ] ;
                sh:property [                                # A new Design Life Phase is started with a Change of Design Life.
                    sh:path occp:startsPhase ;
                    sh:class occp:PhaseF_DesignLife ;
                ] ;
                sh:property [                                # Instant's chronological order 
                    sh:path occp:after ;
                    sh:class occp:ConstructionAcceptance ;
                    sh:message "Wrong assignment (chronological order) of Change of Design Life or Construction Acceptance." ;
                    sh:severity sh:Violation ;
                ] ;
                sh:property [                                # Instant's chronological order within the Phase
                    sh:path occp:after ;
                    sh:class occp:DesignLifeStart ;
                    sh:message "Wrong assignment (chronological order) of Change of Design Life or Design Life Start." ;
                    sh:severity sh:Violation ;
                ] ;
                sh:property [                                
                    sh:path occp:before ;
                    sh:class occp:DeconstructionCompletion ;
                    sh:message "Wrong assignment (chronological order) of Design Life Change or Deconstruction Completion." ;
                    sh:severity sh:Violation ;
                ] ;
                sh:property [                                # Instant has a date as time stamp.
                    sh:path time:hasTime ;                   # Time stamp has to be set 
                    sh:qualifiedValueShape [                 # The following object properties are valid options to set time stamp - no minCount.
                        sh:path (
                        occp:hasEstimatedTime
                        occp:hasActualTime
                        ) ;
                        ] ;
                    sh:message "Missing time stamp (Estimated or Actual Time) for Design Life Change." ;
                    sh:severity sh:Warning ;
                ] .

            osh:DesignLifeEndShape a sh:NodeShape ;          # Instant Design Life End (Phase F - Design Life)
                sh:targetClass occp:DesignLifeEnd ;
                sh:property osh:GeneralDatePropertyShape ;   # Date format YYYY-MM-DD
                sh:property [                                # The current Design Life Phase is ended with Design Life End
                    sh:path occp:endsPhase ;                
                    sh:class occp:PhaseF_DesignLife ;
                ] ;
                sh:or (                                     # Instant's chronological order within the Phase - 2 Options
                    [
                        sh:path occp:after ;
                        sh:class occp:DesignLifeStart ;
                        sh:message "Wrong assignment (chronological order) of Design Life End or Design Life Start." ;
                        sh:severity sh:Violation ;
                    ]
                    [
                        sh:path occp:after ;
                        sh:class occp:DesignLifeChange ;
                        sh:message "Wrong assignment (chronological order) of Design Life End or Design Life Change." ;
                        sh:severity sh:Violation ;
                    ]
                ) ;
                sh:property [                                # Instant has a date as time stamp.
                    sh:path time:hasTime ;                   # Time stamp has to be set 
                    sh:qualifiedValueShape [                 # The following object properties are valid options to set time stamp
                        sh:path (
                        occp:hasEstimatedTime
                        occp:hasActualTime
                        ) ;
                        sh:minCount 1 ;
                        ] ;
                    sh:message "Missing time stamp (Estimated or Actual Time) for Design Life End - min. count = 1." ;
                    sh:severity sh:Violation ;
                ] .

            osh:DesignLifeStartShape a sh:NodeShape ;        # Instant Design Life Start (Phase F - Design Life)
                sh:targetClass occp:DesignLifeEnd ;
                sh:property osh:GeneralDatePropertyShape ;   # Date format YYYY-MM-DD
                sh:property [                                # A new Design Life Phase is started with Design Life Start
                    sh:path occp:startsPhase ;                
                    sh:class occp:PhaseF_DesignLife ;
                ] ;
                sh:property [                                # Instant's chronological order 
                        sh:path occp:after ;
                        sh:class occp:ConstructionAcceptance ;
                        sh:message "Wrong assignment (chronological order) of Design Life Start or Construction Acceptance." ;
                        sh:severity sh:Violation ;
                ] ;
                sh:property [                                
                    sh:path occp:before ;
                    sh:class occp:DeconstructionCompletion ;
                    sh:message "Wrong assignment (chronological order) of Design Life Start or Deconstruction Completion." ;
                    sh:severity sh:Violation ;
                ] ;
                sh:property [                                # Instant has a date as time stamp.
                    sh:path time:hasTime ;                   # Time stamp has to be set 
                    sh:qualifiedValueShape [                 # The following object properties are valid options to set time stamp
                        sh:path (
                        occp:hasEstimatedTime
                        occp:hasActualTime
                        ) ;
                        sh:minCount 1 ;
                        ] ;
                    sh:message "Missing time stamp (Estimated or Actual Time) for Design Life Start - min. count = 1." ;
                    sh:severity sh:Violation ;
                ] .

    ### PHASE G INSTANTS
        # PHASE ASSIGNMENT
            osh:PhaseGInstantShape a sh:NodeShape ;
                sh:targetClass occp:PhaseG_Instant ;
                sh:property [
                    sh:path occp:hasPhase ;
                    sh:class occp:PhaseG_Inspection ;
                    sh:message "Wrong Phase/Instant assignment - Instant should belong to Phase G (Inspection)." ;
                    sh:severity sh:Violation ;
                ] .

        ### INSTANT SHAPES PHASE G - INSPECTION
            osh:InspectionExecutionShape a sh:NodeShape ;    # Instant Inspection Execution (Phase G - Inspection)
                sh:targetClass occp:InspectionExecution ;
                sh:property osh:GeneralDatePropertyShape ;   # Date format YYYY-MM-DD
                sh:property [                                # Instant's chronological order 
                    sh:path occp:after ;
                    sh:class occp:ConstructionAcceptance ;
                    sh:message "Wrong assignment (chronological order) of Inspection Execution or Construction Acceptance." ;
                    sh:severity sh:Violation ;
                ] ;
                sh:or (                                     # Instant's chronological order - 2 Options
                    [
                        sh:path occp:after ;
                        sh:class occp:UsageStart ;
                        sh:message "Wrong assignment (chronological order) of Inspection Execution or Usage Start." ;
                        sh:severity sh:Violation ;
                    ]
                    [
                        sh:path occp:after ;
                        sh:class occp:UsageChange ;
                        sh:message "Wrong assignment (chronological order) of Inspection Execution or Usage Change." ;
                        sh:severity sh:Violation ;
                    ]
                ) ;
                sh:property [                                # Instant's chronological order within phase
                    sh:path occp:before ;
                    sh:class occp:NextRegularInspection ;
                    sh:message "Wrong assignment (chronological order) of Inspection Execution or Next Regular Inspection." ;
                    sh:severity sh:Warning ;
                ] ;
                sh:property [                                
                    sh:path occp:before ;
                    sh:class occp:DeconstructionCompletion ;
                    sh:message "Wrong assignment (chronological order) of Inspection Execution or Deconstruction Completion." ;
                    sh:severity sh:Violation ;
                ] ;
                sh:property [                                # Instant has a date as time stamp.
                    sh:path time:hasTime ;                   # Time stamp has to be set 
                    sh:qualifiedValueShape [                 # The following object properties are valid options to set time stamp - no minCount.
                        sh:path (
                        occp:hasEstimatedTime
                        occp:hasActualTime
                        ) ;
                        ] ;
                    sh:message "Missing time stamp (Estimated or Actual Time) for Inspection Execution." ;
                    sh:severity sh:Violation ;
                ] .

            osh:IrregularInspectionShape a sh:NodeShape ;    # Instant Irregular Inspection (Phase G - Inspection)
                sh:targetClass occp:IrregularInspection ;
                sh:property osh:GeneralDatePropertyShape ;   # Date format YYYY-MM-DD
                sh:property [                                # Instant's chronological order 
                    sh:path occp:after ;
                    sh:class occp:UsageStart ;
                    sh:message "Wrong assignment (chronological order) of Irregular Inspection or Usage Start." ;
                    sh:severity sh:Violation ;
                ] ;
                sh:property [                                
                    sh:path occp:before ;
                    sh:class occp:DeconstructionCompletion ;
                    sh:message "Wrong assignment (chronological order) of Irregular Inspection or Deconstruction Completion." ;
                    sh:severity sh:Violation ;
                ] ;
                sh:property [                                # Instant has a date as time stamp.
                    sh:path time:hasTime ;                   # Time stamp has to be set 
                    sh:qualifiedValueShape [                 # The following object properties are valid options to set time stamp
                        sh:path (
                        occp:hasEstimatedTime
                        occp:hasActualTime
                        ) ;
                        ] ;
                    sh:message "Missing time stamp (Estimated or Actual Time) for Irregular Inspection." ;
                    sh:severity sh:Violation ;
                ] .

            osh:NextRegularInspectionShape a sh:NodeShape ;  # Instant Next Regular Inspection (Phase G - Inspection)
                sh:targetClass occp:NextRegularInspection ;
                sh:property osh:GeneralDatePropertyShape ;   # Date format YYYY-MM-DD
                sh:property [                                # Instant's chronological order 
                    sh:path occp:after ;
                    sh:class occp:UsageStart ;
                    sh:message "Wrong assignment (chronological order) of Next Regular Inspection or Usage Start." ;
                    sh:severity sh:Violation ;
                ] ;
                sh:property [                                
                    sh:path occp:before ;
                    sh:class occp:DeconstructionCompletion ;
                    sh:message "Wrong assignment (chronological order) of Next Regular Inspection or Deconstruction Completion." ;
                    sh:severity sh:Warning ;
                ] ;
                sh:property [                                # Instant has a date as time stamp.
                    sh:path time:hasTime ;                   # Time stamp has to be set 
                    sh:qualifiedValueShape [                 # The following object properties are valid options to set time stamp
                        sh:path (
                        occp:hasEstimatedTime
                        occp:hasActualTime
                        ) ;
                        ] ;
                    sh:message "Missing time stamp (Estimated or Actual Time) for Next Regular Inspection." ;
                    sh:severity sh:Violation ;
                ] .

    ### PHASE H INSTANTS
        # PHASE ASSIGNMENT
            osh:PhaseHInstantShape a sh:NodeShape ;
                sh:targetClass occp:PhaseH_Instant ;
                sh:property [
                    sh:path occp:hasPhase ;
                    sh:class occp:PhaseH_SpecialEvents ;
                    sh:message "Wrong Phase/Instant assignment - Instant should belong to Phase H (Special Events)." ;
                    sh:severity sh:Violation ;
                ] .

        ### INSTANT SHAPES PHASE H - SPECIAL EVENTS
            osh:GeologicalEventShape a sh:NodeShape ;        # Instant Geological Event (Phase H - Special Events)
                sh:targetClass occp:GeologicalEvent ;
                sh:property osh:GeneralDatePropertyShape ;   # Date format YYYY-MM-DD
                sh:property [                                # Instant has a date as time stamp.
                    sh:path time:hasTime ;                   # Time stamp has to be set 
                    sh:qualifiedValueShape [                 # The following object properties are valid options to set time stamp - no minCount.
                        sh:path (
                        occp:hasEstimatedTime
                        occp:hasActualTime
                        ) ;
                        ] ;
                    sh:message "Missing time stamp (Estimated or Actual Time) for Geological Event." ;
                    sh:severity sh:Violation ;
                ] .

            osh:LoadEventShape a sh:NodeShape ;              # Instant Load Event (Phase H - Special Events)
                sh:targetClass occp:LoadEvent ;
                sh:property osh:GeneralDatePropertyShape ;   # Date format YYYY-MM-DD
                sh:property [                                # Instant's chronological order 
                    sh:path occp:after ;
                    sh:class occp:ConstructionCompletion ;
                    sh:message "Wrong assignment (chronological order) of Load Event or Construction Completion." ;
                    sh:severity sh:Violation ;
                ] ;
                sh:property [                                
                    sh:path occp:before ;
                    sh:class occp:DeconstructionCompletion ;
                    sh:message "Wrong assignment (chronological order) of Load Event or Deconstruction Completion." ;
                    sh:severity sh:Violation ;
                ] ;
                sh:property [                                # Instant has a date as time stamp.
                    sh:path time:hasTime ;                   # Time stamp has to be set 
                    sh:qualifiedValueShape [                 # The following object properties are valid options to set time stamp
                        sh:path (
                        occp:hasEstimatedTime
                        occp:hasActualTime
                        ) ;
                        ] ;
                    sh:message "Missing time stamp (Estimated or Actual Time) for Load Event." ;
                    sh:severity sh:Violation ;
                ] .

            osh:WeatherEventShape a sh:NodeShape ;           # Instant Weather Event (Phase H - Special Events)
                sh:targetClass occp:WeatherEvent ;
                sh:property osh:GeneralDatePropertyShape ;   # Date format YYYY-MM-DD
                sh:property [                                # Instant has a date as time stamp.
                    sh:path time:hasTime ;                   # Time stamp has to be set 
                    sh:qualifiedValueShape [                 # The following object properties are valid options to set time stamp - no minCount.
                        sh:path (
                        occp:hasEstimatedTime
                        occp:hasActualTime
                        ) ;
                        ] ;
                    sh:message "Missing time stamp (Estimated or Actual Time) for Geological Event." ;
                    sh:severity sh:Violation ;
                ] .

    ### PHASE K INSTANTS
        # PHASE ASSIGNMENT
            osh:PhaseKInstantShape a sh:NodeShape ;
                sh:targetClass occp:PhaseK_Instant ;
                sh:property [
                    sh:path occp:hasPhase ;
                    sh:class occp:PhaseK_Damage ;
                    sh:message "Wrong Phase/Instant assignment - Instant should belong to Phase K (Damage)." ;
                    sh:severity sh:Violation ;
                ] .

        ### INSTANT SHAPES PHASE K - DAMAGE
            osh:DamageDetectionShape a sh:NodeShape ;        # Instant Damage Detection (Phase K - Damage)
                sh:targetClass occp:DamageDetection ;
                sh:property osh:GeneralDatePropertyShape ;   # Date format YYYY-MM-DD
                sh:property [                                # Instant's chronological order 
                    sh:path occp:after ;
                    sh:class occp:ConstructionCompletion ;
                    sh:message "Wrong assignment (chronological order) of Damage Detection or Construction Completion." ;
                    sh:severity sh:Violation ;
                ] ;
                sh:property [                                
                    sh:path occp:before ;
                    sh:class occp:DeconstructionCompletion ;
                    sh:message "Wrong assignment (chronological order) of Damage Detection or Deconstruction Completion." ;
                    sh:severity sh:Violation ;
                ] ;
                sh:property [                                # Instant has a date as time stamp.
                    sh:path time:hasActualTime ;             # Time stamp has to be set 
                    sh:message "Missing time stamp (Actual Time) for Damage Detection." ;
                    sh:severity sh:Violation ;
                ] .
                
            osh:DamageObservationShape a sh:NodeShape ;      # Instant Damage Observation (Phase K - Damage)
                sh:targetClass occp:DamageObservation ;
                sh:property osh:GeneralDatePropertyShape ;   # Date format YYYY-MM-DD
                sh:property [                                # Instant's chronological order 
                    sh:path occp:after ;
                    sh:class occp:DamageDetection ;
                    sh:message "Wrong assignment (chronological order) of Damage Observation or Damage Detection." ;
                    sh:severity sh:Violation ;
                ] ;
                sh:property [                                
                    sh:path occp:before ;
                    sh:class occp:DeconstructionCompletion ;
                    sh:message "Wrong assignment (chronological order) of Damage Observation or Deconstruction Completion." ;
                    sh:severity sh:Violation ;
                ] ;
                sh:property [                                # Instant has a date as time stamp.
                    sh:path time:hasActualTime ;             # Time stamp has to be set 
                    sh:message "Missing time stamp (Actual Time) for Damage Detection." ;
                    sh:severity sh:Violation ;
                ] .

            osh:DamageRepairShape a sh:NodeShape ;           # Instant Damage Repair (Phase K - Damage)
                sh:targetClass occp:DamageRepair ;
                sh:property osh:GeneralDatePropertyShape ;   # Date format YYYY-MM-DD
                sh:property [                                # Instant's chronological order 
                    sh:path occp:after ;
                    sh:class occp:DamageDetection ;
                    sh:message "Wrong assignment (chronological order) of Damage Repair or Damage Detection." ;
                    sh:severity sh:Violation ;
                ] ;
                sh:property [                                
                    sh:path occp:before ;
                    sh:class occp:DeconstructionCompletion ;
                    sh:message "Wrong assignment (chronological order) of Damage Repair or Deconstruction Completion." ;
                    sh:severity sh:Violation ;
                ] ;
                sh:property [                                # Instant has a date as time stamp.
                    sh:path time:hasTime ;                   # Time stamp has to be set 
                    sh:qualifiedValueShape [                 # The following object properties are valid options to set time stamp - no minCount.
                        sh:path (
                        occp:hasEstimatedTime
                        occp:hasActualTime
                        ) ;
                        ] ;
                    sh:message "Missing time stamp (Estimated or Actual Time) for Damage Repair." ;
                    sh:severity sh:Violation ;
                ] .

    ### PHASE L INSTANTS
        # PHASE ASSIGNMENT
            osh:PhaseLInstantShape a sh:NodeShape ;
                sh:targetClass occp:PhaseL_Instant ;
                sh:property [
                    sh:path occp:hasPhase ;
                    sh:class occp:PhaseL_Repair ;
                    sh:message "Wrong Phase/Instant assignment - Instant should belong to Phase L (Repair)." ;
                    sh:severity sh:Violation ;
                ] .

        ### INSTANT SHAPES PHASE L - REPAIR
            osh:NewComponentShape a sh:NodeShape ;           # Instant New Component (Phase L - Repair)
                sh:targetClass occp:NewComponent ;
                sh:property osh:GeneralDatePropertyShape ;   # Date format YYYY-MM-DD
                sh:property [                                # Instant's chronological order 
                    sh:path occp:after ;
                    sh:class occp:ConstructionCompletion ;
                    sh:message "Wrong assignment (chronological order) of New Component or Construction Completion." ;
                    sh:severity sh:Violation ;
                ] ;
                sh:property [                                
                    sh:path occp:before ;
                    sh:class occp:DeconstructionCompletion ;
                    sh:message "Wrong assignment (chronological order) of New Component or Deconstruction Completion." ;
                    sh:severity sh:Violation ;
                ] ;
                sh:property [                                # Instant has a date as time stamp.
                    sh:path time:hasTime ;                   # Time stamp has to be set 
                    sh:qualifiedValueShape [                 # The following object properties are valid options to set time stamp - no minCount.
                        sh:path (
                        occp:hasEstimatedTime
                        occp:hasActualTime
                        ) ;
                        ] ;
                    sh:message "Missing time stamp (Estimated or Actual Time) for New Component." ;
                    sh:severity sh:Violation ;
                ] .

            osh:RepairCompletionShape a sh:NodeShape ;           # Instant Repair Completion (Phase L - Repair)
                sh:targetClass occp:RepairCompletion ;
                sh:property osh:GeneralDatePropertyShape ;   # Date format YYYY-MM-DD
                sh:property [                                # Instant's chronological order 
                    sh:path occp:after ;
                    sh:class occp:ConstructionCompletion ;
                    sh:message "Wrong assignment (chronological order) of Repair Completion or Construction Completion." ;
                    sh:severity sh:Violation ;
                ] ;
                sh:property [                                # Instant's chronological order 
                    sh:path occp:after ;
                    sh:class occp:RepairStart ;
                    sh:message "Wrong assignment (chronological order) of Repair Completion or Repair Start." ;
                    sh:severity sh:Violation ;
                ] ;
                sh:property [                                
                    sh:path occp:before ;
                    sh:class occp:DeconstructionCompletion ;
                    sh:message "Wrong assignment (chronological order) of Repair Completion or Deconstruction Completion." ;
                    sh:severity sh:Violation ;
                ] ;
                sh:property [                                # Instant has a date as time stamp.
                    sh:path time:hasTime ;                   # Time stamp has to be set 
                    sh:qualifiedValueShape [                 # The following object properties are valid options to set time stamp - no minCount.
                        sh:path (
                        occp:hasEstimatedTime
                        occp:hasActualTime
                        ) ;
                        ] ;
                    sh:message "Missing time stamp (Estimated or Actual Time) for Repair Completion." ;
                    sh:severity sh:Violation ;
                ] .

            osh:RepairStartShape a sh:NodeShape ;            # Instant Repair Start (Phase L - Repair)
                sh:targetClass occp:RepairStart ;
                sh:property osh:GeneralDatePropertyShape ;   # Date format YYYY-MM-DD
                sh:property [                                # Instant's chronological order 
                    sh:path occp:after ;
                    sh:class occp:ConstructionCompletion ;
                    sh:message "Wrong assignment (chronological order) of Repair Start or Construction Completion." ;
                    sh:severity sh:Violation ;
                ] ;
                sh:property [                                # Instant's chronological order 
                    sh:path occp:after ;
                    sh:class occp:DamageDetection ;
                    sh:message "Wrong assignment (chronological order) of Repair Start or Damage Detection." ;
                    sh:severity sh:Violation ;
                ] ;
                sh:property [                                
                    sh:path occp:before ;
                    sh:class occp:DeconstructionCompletion ;
                    sh:message "Wrong assignment (chronological order) of Repair Start or Deconstruction Completion." ;
                    sh:severity sh:Violation ;
                ] ;
                sh:property [                                # Instant has a date as time stamp.
                    sh:path time:hasTime ;                   # Time stamp has to be set 
                    sh:qualifiedValueShape [                 # The following object properties are valid options to set time stamp - no minCount.
                        sh:path (
                        occp:hasEstimatedTime
                        occp:hasActualTime
                        ) ;
                        ] ;
                    sh:message "Missing time stamp (Estimated or Actual Time) for Repair Start." ;
                    sh:severity sh:Violation ;
                ] .

    ### PHASE M INSTANTS
        # PHASE ASSIGNMENT
            osh:PhaseMInstantShape a sh:NodeShape ;
                sh:targetClass occp:PhaseM_Instant ;
                sh:property [
                    sh:path occp:hasPhase ;
                    sh:class occp:PhaseM_Deconstruction ;
                    sh:message "Wrong Phase/Instant assignment - Instant should belong to Phase M (Deconstruction)." ;
                    sh:severity sh:Violation ;
                ] .

        ### INSTANT SHAPES PHASE M - DECONSTRUCTION
            osh:DeconstructionCompletionShape a sh:NodeShape ;   # Instant Deconstruction Completion (Phase M - Deconstruction)
                sh:targetClass occp:DeconstructionCompletion ;
                sh:property osh:GeneralDatePropertyShape ;   # Date format YYYY-MM-DD
                sh:property [                                # Instant's chronological order 
                    sh:path occp:after ;
                    sh:class occp:DeconstructionStart ;
                    sh:message "Wrong assignment (chronological order) of Deconstruction Completion or Deconstruction Start." ;
                    sh:severity sh:Violation ;
                ] ;
                sh:property [                                # Instant has a date as time stamp.
                    sh:path time:hasTime ;                   # Time stamp has to be set 
                    sh:qualifiedValueShape [                 # The following object properties are valid options to set time stamp - no minCount.
                        sh:path (
                        occp:hasEstimatedTime
                        occp:hasActualTime
                        ) ;
                        ] ;
                    sh:message "Missing time stamp (Estimated or Actual Time) for Deconstruction Completion." ;
                    sh:severity sh:Violation ;
                ] .

            osh:DeconstructionStartShape a sh:NodeShape ;   # Instant Deconstruction Start (Phase M - Deconstruction)
                sh:targetClass occp:DeconstructionCompletion ;
                sh:property osh:GeneralDatePropertyShape ;   # Date format YYYY-MM-DD
                sh:property [                                # Instant's chronological order 
                    sh:path occp:after ;
                    sh:class occp:UsageEnd ;
                    sh:message "Wrong assignment (chronological order) of Deconstruction Start or Usage End." ;
                    sh:severity sh:Violation ;
                ] ;
                sh:property [                                # Instant's chronological order 
                    sh:path occp:before ;
                    sh:class occp:DeconstructionCompletion ;
                    sh:message "Wrong assignment (chronological order) of Deconstruction Start or Deconstruction Completion." ;
                    sh:severity sh:Violation ;
                ] ;
                sh:property [                                # Instant has a date as time stamp.
                    sh:path time:hasTime ;                   # Time stamp has to be set 
                    sh:qualifiedValueShape [                 # The following object properties are valid options to set time stamp - no minCount.
                        sh:path (
                        occp:hasEstimatedTime
                        occp:hasActualTime
                        ) ;
                        ] ;
                    sh:message "Missing time stamp (Estimated or Actual Time) for Deconstruction Start." ;
                    sh:severity sh:Violation ;
                ] .


### Current End of Ontology
